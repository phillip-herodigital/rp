@using Sitecore.Mvc.Presentation
@using Sitecore.Web.UI.Controls.Common.ActionControls
@model RenderingModel
@{
  var actionControl = new ActionControl(new DatasourceBasedParametersResolver(Model.Rendering));
  var userProfileKey = actionControl.GetUserProfileKey();
  var userProfileValue = Sitecore.Context.User.Profile.GetCustomProperty(userProfileKey);
  actionControl.Attributes["data-sc-userprofilekey"] = userProfileKey;
  actionControl.Attributes["data-sc-actionsstatus"] = string.IsNullOrEmpty(userProfileValue) ? "[]" : userProfileValue;
  actionControl.AppendClass("sc-actionpanel");

  var htmlAttributes = actionControl.HtmlAttributes;
  var text = actionControl.Text;
  var menu = actionControl.RenderMenu();
}                    
<div @htmlAttributes>
  <div style="display:none" class="sc-actionpanel-popup" data-bind="visible:isOpen, click: toggleIsOpen"></div>     
  <ul role="menu" class="nav">
    <li>
      <div class="btn-group" data-bind="foreach:favorites">
        <!-- ko ifnot: isIcon -->
        <span><button class="btn" href="javascript:;" data-toggle="tooltip" data-bind="text: text, click: $parent.invokeFavorite, attr: { title: tooltip }, enable: isEnabled"></button></span>
        <!-- /ko -->

        <!-- ko if: isIcon -->
        <span><a class="btn" href="javascript:;" data-bind="attr:{title:tooltip}">
          <div class="sc-icon" data-bind="click: $parent.invokeFavorite, enable: isEnabled, style: { backgroundImage: iconSrc, backgroundPosition: iconBackgroundPosition }" >
					</div>
        </a></span> 
        <!-- /ko -->

      </div>
    </li>
    <li role="menuitem">
      <div class="dropdown" data-bind="click:invokeAction">
        <a class="btn" data-bind="click: toggleIsOpen, clickBubble: false">
          <span class="dropdown-text" data-bind="text:text">@text</span>
          <span class="caret"></span>
        </a> 

        @Html.Raw(menu)
      </div>
    </li>
  </ul>
</div>
