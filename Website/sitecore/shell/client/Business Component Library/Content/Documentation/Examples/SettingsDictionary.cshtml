@using Sitecore.Data
@using Sitecore.Mvc
@using Sitecore.Web.UI.Controls.Common.Buttons
@using Sitecore.Web.UI.Controls.Common.ListBoxes
@using Sitecore.Web.UI.Controls.Common.Renderings
@using Sitecore.Mvc.Presentation
@model RenderingModel    
@{
  var rendering = new ID("{8BE75D0B-EA4E-4FEE-976C-A5CCB5BE5011}").ToString();
}
              
<p>
  In the following example 'Settings' property contains list of names. Value is 'DefaultIcon,DefaultItem'.
</p>        
       
<p>
  Output:          
</p>
@Html.Sitecore().Controls().Rendering(this.Html, rendering, "Dictionary1", "/sitecore/Client/Speak/Content", new { Settings = "DefaultIcon,DefaultItem" })
<input type="hidden" class="sc-dictionary-example" data-sc-id="InitControl" />
<pre>
  @Html.Sitecore().Controls().ListBox("ListBox1", new {})
</pre>                        

<pre>
&#64;Html.Sitecore().Controls().Rendering(this.Html, rendering, "Dictionary1", "/sitecore/Client/Speak/Content", new { Settings = "DefaultIcon,DefaultItem" })
&#64;Html.Sitecore().Controls().ListBox("ListBox1", new {})
</pre>

            
<p>
  In the following example the data source of the <code>Model.Rendering</code> points to an
  item with template SettingDictionary. This template has a Multi-line Text field 'Settings',
  where the value is 'DefaultSortOrderValue, DisableBrowserCaching'.
</p>        
       
<p>
  Output:          
</p>
@Html.Sitecore().Controls().Rendering(this.Html, rendering, "Dictionary2", "/sitecore/client/Business Component Library/Content/Documentation/Component Library/PageSettings/SettingsDictionary", new { })
<pre>
  @Html.Sitecore().Controls().ListBox("ListBox2", new {})
</pre>                        

<pre>
&#64;Html.Sitecore().Controls().Rendering(this.Html, rendering, "Dictionary2", "/sitecore/client/Business Component Library/Content/Documentation/Component Library/PageSettings/SettingsDictionary", new { })
&#64;Html.Sitecore().Controls().ListBox("ListBox2", new {})
</pre>

<p>
  Code of the function used for displaying Dictionaries in ListBoxes          
</p>

<pre>
      if (this.app && this.app.Dictionary1 && this.app.Dictionary2) {
        var app = this.app;
        var values = app.Dictionary1.attributes;
        var data = [];
        _.each(_.pairs(values), function (value) {
          if (value[0] != 'type' && value[0] != 'name') {
            data.push({
              itemId: '',
              itemName: value[0]
            });
            data.push({
              itemId: '',
              itemName: value[1]
            });
          }
        });
        app.ListBox1.set('items', data);
        
        values = app.Dictionary2.attributes;
        data = [];
        _.each(_.pairs(values), function (value) {
          if (value[0] != 'type' && value[0] != 'name') {
            data.push({
              itemId: '',
              itemName: value[0]
            });
            data.push({
              itemId: '',
              itemName: value[1]
            });
          }
        });
        app.ListBox2.set('items', data);
      }
</pre>