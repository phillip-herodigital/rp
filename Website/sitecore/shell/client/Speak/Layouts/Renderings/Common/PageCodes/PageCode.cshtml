@using Sitecore
@using Sitecore.Configuration
@using Sitecore.Extensions.StringExtensions
@using Sitecore.IO
@using Sitecore.Mvc
@using Sitecore.Mvc.Presentation
@using Sitecore.Reflection
@using Sitecore.Web.PageCodes
@using Sitecore.Web.UI.Controls.Common.UserControls
@model Sitecore.Mvc.Presentation.RenderingModel
@{
  var userControl = this.Html.Sitecore().Controls().GetUserControl(this.Model.Rendering);
  var waitSeconds = SpeakSettings.Html.RequireJsWaitSeconds;
  
  var mainFile = SpeakSettings.Html.RequireJsMainFile;
  var bindingFile = SpeakSettings.Html.BindingPluginFile;
  var speakCoreVersion = userControl.GetString("SpeakCoreVersion");
  var assetsLoadingMode = userControl.GetString("AssetsLoadingType");
  var isSpeak1_1 = string.IsNullOrEmpty(speakCoreVersion) || speakCoreVersion == "{C1B05B3A-689F-474A-918B-5FD50F12849C}";
  var useDevMode = "{6C0818B0-587E-4027-9DDB-96C5D66F9C1A}";
  var useMinifiedMode = "{3A0CC262-E84F-4F0F-98E9-BCA5F6BEE829}";
  var useCDNMode = "{84F1BE3E-02A3-42F8-AEB2-E73768790E45}";
  var useBundled = "{5A598A7A-CBE9-470F-AD2B-4FD7E0561307}";
  var contextLanguage = ClientHost.Context.Language.Name;
  var contentDatabaseName = Sitecore.Context.ContentDatabase.Name;
  var dataBaseName = Sitecore.Context.Database.Name;
  
  if (isSpeak1_1)
  {
    mainFile = SpeakSettings.Html.RequireJSMainFile71;
    
    if (useMinifiedMode == assetsLoadingMode || SpeakSettings.Html.MinifyScripts)
    {
      mainFile = "/-/speak/v1/assets/main.min.js";
    }
    else if (useCDNMode == assetsLoadingMode)
    {
      mainFile = "/-/speak/v1/assets/main.cdn.min.js";
    }
    else if (useBundled == assetsLoadingMode)
    {
      mainFile = "/-/speak/v1/assets/main.bundled.min.js";
    }
  }
  else
  {
    if (useMinifiedMode == assetsLoadingMode || SpeakSettings.Html.MinifyScripts)
    {
      mainFile = SpeakSettings.Html.RequireJsMainFileMinified;
      bindingFile = SpeakSettings.Html.BindingPluginFileMinified;
    }
    else if (useCDNMode == assetsLoadingMode)
    {
      mainFile = "/-/speak/v1/assets/main-2.0.cdn.min.js";
      bindingFile = SpeakSettings.Html.BindingPluginFileMinified;
    }
    else if (useBundled == assetsLoadingMode)
    {
      mainFile = "/-/speak/v1/assets/main-2.0.bundled.min.js";
      bindingFile = SpeakSettings.Html.BindingPluginFileMinified;
    }
  }

  var debug = Sitecore.Context.Diagnostics.Debugging;

  var title = this.Html.Sitecore().Placeholder("Page.Title");
  if (string.IsNullOrEmpty(title.ToString()))
  {
    title = new HtmlString(this.Model.PageItem["BrowserTitle"]);
  }

  // run the server side page code
  var pageCodeTypeName = userControl.GetString("PageCodeTypeName");

  var behaviors = userControl.GetString("Behaviors") ?? string.Empty;
  if (!string.IsNullOrEmpty(behaviors))
  {
    behaviors = "data-sc-behaviors=\"" + behaviors + "\"";
  }

  if (!string.IsNullOrEmpty(pageCodeTypeName))
  {
    var pageCode = ReflectionUtil.CreateObject(pageCodeTypeName) as IPageCode;
    if (pageCode == null)
    {
      throw new InvalidOperationException("Page Code object not found: " + pageCodeTypeName);
    }

    pageCode.Initialize(RenderingContext.Current);
  }

  // find the client side page code javascript file
  var scriptFileName = userControl.GetString("PageCodeScriptFileName");

  //if the js pagecode is not specified we suppose to have it the same path as the current PageItem
  if (string.IsNullOrEmpty(scriptFileName))
  {
    scriptFileName = "/sitecore/shell/client/" + this.Model.PageItem.Paths.Path.Mid(17) + "/" + this.Model.PageItem.Name + ".js";

    //checking if it exists on the server
    if (!FileUtil.FileExists(scriptFileName))
    {
      scriptFileName = null;
    }
  }
}
<meta data-sc-name="sitecoreLanguage" data-sc-content="@contextLanguage"/>
<meta data-sc-name="sitecoreContentDatabase" data-sc-content="@contentDatabaseName"/>
<meta data-sc-name="sitecoreDatabase" data-sc-content="@dataBaseName" />
<title>@title</title>
<link rel="shortcut icon" href="/sitecore/images/favicon.ico" />
@Html.Sitecore().PageStylesheets(isSpeak1_1 ? "1" : "2")

@if (debug)
{
  <script type="text/javascript"> window.__SITECOREDEBUG = true; </script>
}
@if(useBundled == assetsLoadingMode)
{
  <script>
    var __speak_config = __speak_config || {};
    __speak_config.useBundle = true;
    __speak_config.deferred = true;
  </script>
  if (isSpeak1_1)
  {
     <script src="~/sitecore/shell/client/Speak/Assets/lib/core/1.1/sitecore-1.0.2.packed.js"></script>
  }
  else
  {
    <script src="~/sitecore/shell/client/Speak/Assets/lib/core/2.0/sitecore.packed.js"></script>
  }
}

@if (isSpeak1_1 && !string.IsNullOrEmpty(scriptFileName))
{
  <script data-sc-require="@scriptFileName" type="text/x-sitecore-pagecode" @behaviors>
  </script>
}

@if (!isSpeak1_1 && !string.IsNullOrEmpty(scriptFileName))
{
  <script src="@scriptFileName" type="text/x-sitecore-pagecode">
  </script>
}


@if (!isSpeak1_1)
{
  <script type='text/x-sitecore-pluginscript' data-sc-pluginid="bindingjsPlugin" data-sc-require="@bindingFile"></script>
}

<script src="/sitecore/shell/client/Speak/Assets/lib/core/2.0/deps/require.js" data-main="@mainFile" type="text/javascript"></script>
<script type="text/javascript">require.config({ waitSeconds: @waitSeconds });</script>
@this.Html.Sitecore().PageScripts()
@this.Html.Sitecore().Overlays()