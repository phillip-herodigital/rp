@using Newtonsoft.Json
@using Sitecore
@using Sitecore.Data
@using Sitecore.Data.Items
@using Sitecore.Mvc
@using Sitecore.PathAnalyzer.Localization
@using Sitecore.PathAnalyzer.Client.Sitecore.Shell.Client.Applications.PathAnalyzer.Common.Layouts.Renderings.Shared
@using Sitecore.Web.UI.Controls.Common.Renderings
@using Sitecore.Web.UI.Controls.Common.Texts
@using Sitecore.Web.UI.Controls.Common.UserControls
@model Sitecore.Mvc.Presentation.RenderingModel
@{
    var rendering = Html.Sitecore().Controls().GetUserControl(Model.Rendering);

    rendering.Class = "sc-TreeDefinitionFilter";
    rendering.Requires.Script("pathanalyzer", "TreeDefinitionFilter.js");
    rendering.Attributes.Add("data-bind", "visible: isVisible");

    var initialItemId = Helper.GetTreeDefinitionCookieValue();
    if (string.IsNullOrWhiteSpace(initialItemId))
    {
        initialItemId = rendering.GetString("DefaultTreeDefinition");
    }
    Item initialItem = null;
    if (!string.IsNullOrWhiteSpace(initialItemId))
    {
        initialItem = ClientHost.Databases.ContentDatabase.GetItem(initialItemId);
        if (initialItem != null)
        {
            rendering.Attributes.Add("data-sc-initialitem", initialItem.DisplayName + "," + initialItem.Database.Name + "," + initialItem.ID);
        }
    }

    rendering.HasNestedComponents = true;
    var errorMessages = new
    {
        InvalidTreeDefinition = Helper.GetTextValue(PathAnalyzerTexts.MapFilterInvalidMap)
    };

    Guid rootItemId;
    var defaultMapRoot = rendering.GetString("DefaultMapRoot");
    if (string.IsNullOrEmpty(defaultMapRoot) || !Guid.TryParse(defaultMapRoot, out rootItemId))
    {
        rootItemId = Sitecore.PathAnalyzer.Constants.ItemIDs.TreeDefinitionsRoot.Guid;
    }
    
    rendering.Attributes.Add("data-sc-errormessages", JsonConvert.SerializeObject(errorMessages));
}

@EmbedTreeDefinitionFilter(rendering, initialItem, new ID(rootItemId))

@helper EmbedTreeDefinitionFilter(Sitecore.Web.UI.Controls.Common.UserControls.UserControl rendering, Item initialItem, ID rootItemId)
{
    var renderingId = rendering.ControlId;
    var helper = new RenderingHelper(Html, renderingId);

    helper.MakeRow("ControlsRow", renderingId + "ContentWrapper", true, controlsRow =>
    {
        helper.MakeText("TreeDefinitionText", controlsRow, PathAnalyzerTexts.MapFilterTitle, TextType.Title);
        var preloadPath = initialItem != null ? rootItemId + initialItem.Paths.GetPath(rootItemId.ToString(), "/", ItemPathType.ItemID) : string.Empty;
        helper.MakeTreeView("TreeDefinitionTreeView", controlsRow, rootItemId, preloadPath, 1, false);
    });

    // Rendering
    <div @rendering.HtmlAttributes>
        @Html.Sitecore().Controls().Rendering(Html, "{F6C9F461-FCAF-47DC-AA01-C8C64C2EFFB8}", renderingId + "ContentWrapper", "", new
        {
            UsePadding = false
        })
    </div>
}