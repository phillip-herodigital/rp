@using Sitecore.Links
@using StreamEnergy.MyStream.Utility
@{
    Func<string, bool> isLanguageSpanish = languageTag => languageTag.ToLowerInvariant() == "es" || languageTag.StartsWith("es-", StringComparison.InvariantCultureIgnoreCase);
    var languageLinkUrlLanguage = isLanguageSpanish(Sitecore.Context.Language.Name) ? "en" : "es";
    var languageLinkText = isLanguageSpanish(Sitecore.Context.Language.Name) ? "In English" : "En Español";
    var languageLinkUrl = LinkManager.GetItemUrl(Sitecore.Context.Item, new UrlOptions()
    {
        Language = Sitecore.Globalization.Language.Parse(languageLinkUrlLanguage),
    });

    var selectedNode = SiteMap.CurrentNode;
    if (selectedNode == null)
    {
        var provider = SiteMap.Provider as NavigationSiteMapProvider;
        if (provider != null)
        {
            selectedNode = Sitecore.Context.Item.GetAncestors().Select(provider.FindSiteMapNode).FirstOrDefault(node => node != null);
        }
    }

    ItemSiteMapNode thirdLevelRootNode = null;
    if (selectedNode != null)
    {
        var level = selectedNode.Level();
        thirdLevelRootNode = level < 2 ? null : (level == 2 ? selectedNode : selectedNode.GetAncestor(level - 2)) as ItemSiteMapNode;
    }

    var topLevelNavigation = SiteMap.RootNode.ChildNodes.Cast<ItemSiteMapNode>().Select((n, i) => new { Value = n, Number = i + 1 }).ToArray();
    var selectedNavItem = topLevelNavigation.Where(node => selectedNode != null && (node.Value.Key == selectedNode.Key || selectedNode.IsDescendantOf(node.Value))).Select(node => node.Number).FirstOrDefault();
}
<header class="site-header" main-nav="@selectedNavItem" data-fixed-fix>
    <script id="mobileNav" type="text/ng-template">
        <nav class="mobile-nav" mobile-nav="@selectedNavItem">
            <ul>
                @foreach (var node in topLevelNavigation)
                {
                    <li ng-class="{ opened: subnav == @node.Number }">
                        <span>
                            @if (node.Value.HasChildNodes)
                            {
                                <span class="arrow" ng-click="toggleSubnav(@node.Number)"><i ng-class="{'icon-nav-arrow-expanded': subnav == @node.Number, 'icon-nav-arrow-collapsed': subnav != @node.Number}"></i></span>
                            }
                            @Html.Sitecore().Field("Navigation Link", node.Value.Item)
                        </span>
                        @if (node.Value.HasChildNodes)
                        {
                            <ul ng-hide="subnav != @node.Number">
                                @foreach (ItemSiteMapNode childNode in node.Value.ChildNodes)
                                {
                                    <li>@Html.Sitecore().Field("Navigation Link", childNode.Item)</li>
                                }
                            </ul>
                        }
                    </li>
                }
                @if (!Sitecore.Context.IsLoggedIn)
                {
                    <li><a href="/pay/">Pay my Bill</a></li>
                    <li><a href="@languageLinkUrl" hreflang="@languageLinkUrlLanguage" lang="@languageLinkUrlLanguage" translate="no">@languageLinkText</a></li>
                    <li><a href="/manage/">Manage My Account</a></li>
                }
                else
                {
                    <li><a href="/api/authentication/logout">Logout</a></li>
                    <li><a href="/faq">Help</a></li>
                    <li><a href="/contact">Contact Us</a></li>
                }
            </ul>
        </nav>
    </script>
    <div class="wrapper">
        <a href="/" class="logo">Stream - Connected Home</a>
        <div class="utility">
            @if (Sitecore.Context.IsLoggedIn)
            {
                <text>Welcome,&nbsp;</text>@Sitecore.Context.User.LocalName<text>&nbsp;&nbsp;&nbsp;</text><a href="/account">My Account</a><text>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;</text><a href="/account/profile">My Profile</a><text>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;</text><a href="/api/authentication/logout">Logout</a>
            }
            else
            {
                <a href="@languageLinkUrl" hreflang="@languageLinkUrlLanguage" lang="@languageLinkUrlLanguage" translate="no">@languageLinkText.Replace(" ", "\u00A0")</a><text>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;</text><span style="letter-spacing: 0.026em;"><a href="/manage/">My&nbsp;Account</a>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;<a href="/pay/">Pay&nbsp;My&nbsp;Bill</a></span>
            }
        </div>
        <a href="" class="nav-toggle icon-hamburger" ng-click="toggleSidebar()">Toggle Nav</a>
        <nav class="main-nav">
            <ul class="wrapper">
                @foreach (var node in topLevelNavigation)
                {
                    <li class="nav-@node.Number nav-@node.Value.Item.Name.ToLowerInvariant()" ng-mouseover="showSubnav(@node.Number)" ng-mouseout="hideSubnav()" ng-class="{ selected: subnav==@node.Number }">@Html.Sitecore().Field("Navigation Link", @node.Value.Item)</li>
                }
            </ul>
        </nav>
    </div>
    <nav class="sub-nav">
        @foreach (var node in topLevelNavigation)
        {
            <div class="wrapper" sub-nav="@node.Number" ng-cloak ng-class="{ hidden: subnav != @node.Number }" ng-mouseover="showSubnav(@node.Number)" ng-mouseout="hideSubnav()">
                <ul ng-style="{'margin-left': marginLeft}">
                    @foreach (ItemSiteMapNode childNode in node.Value.ChildNodes)
                    {
                        var selected = selectedNode != null && (childNode.Key == selectedNode.Key || selectedNode.IsDescendantOf(childNode));
                        <li class="@(selected ? "selected" : null)">@Html.Sitecore().Field("Navigation Link", childNode.Item)</li>
                    }
                    @if (!node.Value.HasChildNodes)
                    {
                        <li><a>&nbsp;</a></li>
                    }
                </ul>
            </div>
        }
    </nav>
</header>
@{
    if (Sitecore.Context.Item.Fields["Banner Image"] != null && Sitecore.Context.Item.Fields["Banner Image"].HasValue)
    {
        var renderBannerText = Sitecore.Context.Item.Fields["Banner Text"] != null && (Sitecore.Context.PageMode.IsPageEditorEditing || Sitecore.Context.Item.Fields["Banner Text"].HasValue);
        var renderNavText = thirdLevelRootNode != null && !string.IsNullOrEmpty(thirdLevelRootNode.Title);
        
        var bannerCssClassField = Sitecore.Context.Item.Fields["Banner CSS Class"];
        <div class="banner @(bannerCssClassField != null ? bannerCssClassField.Value : "marketing")" style="@Html.AsBackgroundStyle("Banner Image", Sitecore.Context.Item)">
            @if (renderBannerText || renderNavText)
            {
                <div class="inner">
                    <div class="wrapper">
                        @if (renderBannerText)
                        {
                            @Html.Sitecore().Field("Banner Text", Sitecore.Context.Item)
                        }
                        else
                        {
                            @thirdLevelRootNode.Title
                        }
                    </div>
                </div>
            }
        </div>
    }
}
<nav class="sub-nav">
    @if (thirdLevelRootNode != null)
    {
        <div class="wrapper">
            <ul ng-style="{'margin-left': marginLeft}">
                <li class="@(thirdLevelRootNode.Key == selectedNode.Key ? "selected" : null)">@Html.Sitecore().Field("Navigation Link", thirdLevelRootNode.Item, new { text = Html.Sitecore().Translate("Overview") })</li>
                @foreach (ItemSiteMapNode childNode in thirdLevelRootNode.ChildNodes)
                {
                    var selected = childNode.Key == selectedNode.Key || selectedNode.IsDescendantOf(childNode);
                    <li class="@(selected ? "selected" : null)">@Html.Sitecore().Field("Navigation Link", childNode.Item)</li>
                }
            </ul>
        </div>
    }
</nav>