@using System.Collections.Specialized
@using Sitecore.ContentSearch.ComputedFields
@using Sitecore.Links
@using StreamEnergy.MyStream.Utility
@{
    Func<string, bool> isLanguageSpanish = languageTag => languageTag.ToLowerInvariant() == "es" || languageTag.StartsWith("es-", StringComparison.InvariantCultureIgnoreCase);
    var languageLinkUrlLanguage = isLanguageSpanish(Sitecore.Context.Language.Name) ? "en" : "es";
    var languageLinkText = isLanguageSpanish(Sitecore.Context.Language.Name) ? "In English" : "En Español";
    var languageLinkUrl = LinkManager.GetItemUrl(Sitecore.Context.Item, new UrlOptions()
    {
        Language = Sitecore.Globalization.Language.Parse(languageLinkUrlLanguage),
    });

    var selectedNode = SiteMap.CurrentNode;
    int? selectedNodeLevel = null;
    if (selectedNode == null)
    {
        var provider = SiteMap.Provider as NavigationSiteMapProvider;
        if (provider != null)
        {
            selectedNode = Sitecore.Context.Item.GetAncestors().Select(provider.FindSiteMapNode).FirstOrDefault(node => node != null);
        }
    }

    ItemSiteMapNode thirdLevelRootNode = null;
    if (selectedNode != null)
    {
        selectedNodeLevel = selectedNode.Level();
        thirdLevelRootNode = selectedNodeLevel.Value < 2 ? null : (selectedNodeLevel.Value == 2 ? selectedNode : selectedNode.GetAncestor(selectedNodeLevel.Value - 3)) as ItemSiteMapNode;
    }

    var topLevelNavigation = SiteMap.RootNode.ChildNodes.Cast<ItemSiteMapNode>().Select((n, i) => new { Value = n, Number = i + 1 }).ToArray();
    var selectedNavItem = topLevelNavigation.Where(node => selectedNode != null && (node.Value.Key == selectedNode.Key || selectedNode.IsDescendantOf(node.Value))).Select(node => node.Number).FirstOrDefault();
    var accountDataSourceItem = Sitecore.Context.Database.GetItem("{E67AB785-3CBA-41DE-8060-DC389CA4F13A}");

    var settings = StreamEnergy.Unity.Container.Instance.Resolve<StreamEnergy.ISettings>();
    var enableLanguageLink = !string.IsNullOrEmpty(settings.GetSettingsField("Language Link", "Enable Language Link").Value);

}
<header class="site-header" main-nav="" data-fixed-fix>
    <script id="mobileNav" type="text/ng-template">
        <nav class="mobile-nav" mobile-nav="@selectedNavItem">
            <ul>
                @foreach (var node in topLevelNavigation)
                {
                    <li ng-class="{ opened: subnav == @node.Number }">
                        <span>
                            @if (node.Value.HasChildNodes)
                            {
                                <span class="arrow" ng-click="toggleSubnav(@node.Number)"><i ng-class="{'icon-nav-arrow-expanded': subnav == @node.Number, 'icon-nav-arrow-collapsed': subnav != @node.Number}"></i></span>
                            }
                            @Html.Sitecore().Field("Navigation Link", node.Value.Item)
                        </span>
                        @if (node.Value.HasChildNodes)
                        {
                            <ul class="@node.Value.Item.Name.ToLower()" ng-hide="subnav != @node.Number">
                                @for (var i=0; i< node.Value.ChildNodes.Count; i++)
                                {
                                    var childNode = (ItemSiteMapNode)node.Value.ChildNodes[i];
                                    <li class="@childNode.Item.Name.ToLower()">
                                        @if (childNode.Item.HasChildren)
                                        {
                                            <span class="arrow" ng-click="toggleSubSubnav('@(node.Number + ":" + i)')"><i ng-class="{'icon-nav-arrow-expanded': subsubnav == '@(node.Number + ":" + i)', 'icon-nav-arrow-collapsed': subsubnav != '@(node.Number + ":" + i)'}"></i></span>
                                        }
                                        @Html.Sitecore().Field("Navigation Link", childNode.Item)
                                        @{
                                            var tertiaryNavCssClassField = Sitecore.Context.Item.Fields["Tertiary Nav CSS Class"];
                                        }
                                        @if (childNode.Item.HasChildren)
                                        {
                                            <ul ng-style="{'margin-left': marginLeft}" ng-hide="subsubnav != '@(node.Number + ":" + i)'">
                                                @foreach (ItemSiteMapNode thirdchildNode in childNode.ChildNodes)
                                                {
                                                    var thirdselected = (selectedNode != null) ? (thirdchildNode.Url == selectedNode.Url || thirdchildNode.Key == selectedNode.Key || selectedNode.IsDescendantOf(thirdchildNode)) : false;
                                                    <li class="@(thirdselected ? "selected" : null)">@Html.Sitecore().Field("Navigation Link", thirdchildNode.Item)</li>
                                                }
                                            </ul>
                                        }
                                    </li>
                                }
                            </ul>
                        }
                    </li>
                }
                @if (!Sitecore.Context.IsLoggedIn)
                {
                    if (enableLanguageLink)
                    {
                        <li><a href="@languageLinkUrl" hreflang="@languageLinkUrlLanguage" lang="@languageLinkUrlLanguage" translate="no">@languageLinkText</a></li>
                    }
                    <li><a href="/pay/">@Html.Sitecore().Field("Pay Bill text", accountDataSourceItem)</a></li>
                    <li><a href="/services/renew">@Html.Sitecore().Field("Renew text", accountDataSourceItem)</a></li>
                    <li><a href="/auth/login">@Html.Sitecore().Field("Manage text", accountDataSourceItem)</a></li>
                }
                else
                {
                    <li><a href="/account">@Html.Sitecore().Field("Account text", accountDataSourceItem)</a></li>
                    <li><a href="/account/profile">@Html.Sitecore().Field("My Profile text", accountDataSourceItem)</a></li>
                    <li><a href="/services/renew">@Html.Sitecore().Field("Renew text", accountDataSourceItem)</a></li>
                    <li><a href="/api/authentication/logout">@Html.Sitecore().Field("Sign Out text", accountDataSourceItem)</a></li>
                }
            </ul>
        </nav>
    </script>
    <div class="wrapper">
        <a href="/" class="logo">Stream</a>
        <div class="utility">
            @if (Sitecore.Context.IsLoggedIn)
            {
                <text>Welcome,</text>
                @Sitecore.Context.User.LocalName
                <ul>
                    <li><a href="/account">@Html.Sitecore().Field("Account text", accountDataSourceItem)</a></li>
                    <li><a href="/account/profile">@Html.Sitecore().Field("My Profile text", accountDataSourceItem)</a></li>
                    <li><a href="/services/renew">@Html.Sitecore().Field("Renew text", accountDataSourceItem)</a></li>
                    <li><a href="/api/authentication/logout">@Html.Sitecore().Field("Sign Out text", accountDataSourceItem)</a></li>
                </ul>
            }
            else
            {
                <ul>
                    @if (enableLanguageLink)
                    {
                    <li><a href="@languageLinkUrl" hreflang="@languageLinkUrlLanguage" lang="@languageLinkUrlLanguage" translate="no">@languageLinkText</a></li>
                    }
                    <li><a href="/pay/">@Html.Sitecore().Field("Pay Bill text", accountDataSourceItem)</a></li>
                    <li><a href="/services/renew">@Html.Sitecore().Field("Renew text", accountDataSourceItem)</a></li>
                    <li class="dropdown" ng-class="{ active: dropdownMenu }">
                        <a href="" class="dropdown-toggle" ng-click="dropdownMenu = !dropdownMenu;" ng-class="{ activeblock: dropdownMenu }">
                            @Html.Sitecore().Field("Account text", accountDataSourceItem)
                        </a>
                        <div class="login dropdown-menu" ng-hide="!dropdownMenu" loading-indicator ng-cloak>
                            <div class="protective-home-free">
                                <p class="other-services">@Html.Sitecore().Field("Other Services Text", accountDataSourceItem)</p>
                                <div class="protective">
                                    <div class="subheading">
                                        <i class="protective-icon"></i>
                                        <h3>@Html.Sitecore().Field("Protective - Text", accountDataSourceItem)</h3>
                                    </div>
                                    @Html.Sitecore().Field("Protective - List", accountDataSourceItem)
                                    @Html.Sitecore().Field("Protective - Button", accountDataSourceItem)
                                </div>
                                <div class="home">
                                    <div class="subheading">
                                        <i class="home-icon"></i>
                                        <h3>@Html.Sitecore().Field("Home - Text", accountDataSourceItem)</h3>
                                    </div>
                                    @Html.Sitecore().Field("Home - List", accountDataSourceItem)
                                    @Html.Sitecore().Field("Home - Button", accountDataSourceItem)
                                </div>
                                <div class="free">
                                    <div class="subheading">
                                        @Html.Sitecore().Field("Free Everything - Image", accountDataSourceItem)
                                    </div>
                                    @Html.Sitecore().Field("Free Everything - List", accountDataSourceItem)
                                    @Html.Sitecore().Field("Free Everything - Button", accountDataSourceItem)
                                </div>
                            </div>
                            <div class="energy-mobile">
                                <div class="energy">
                                    <i class="energy-icon"></i>
                                    <h3>@Html.Sitecore().Field("Energy - Text", accountDataSourceItem)</h3>
                                </div>
                                <div class="mobile">
                                    <i class="mobile-icon"></i>
                                    <h3>@Html.Sitecore().Field("Mobile - Text", accountDataSourceItem)</h3>
                                </div>
                                <h4>@Html.Sitecore().Field("Login Dropdown Header", accountDataSourceItem)</h4>
                                <form ng-submit="login()">
                                    <div class="item" data-val-error="Username">
                                        <input data-val="true" data-val-required id="Username" name="Username" ng-model="formData.username" type="text" value="" placeholder="@Html.Sitecore().Field("Login Dropdown Username Label", accountDataSourceItem)">
                                    </div>
                                    <div class="item" data-val-error="Password">
                                        <input data-val="true" data-val-required id="Password" name="Password" ng-model="formData.password" type="password" placeholder="@Html.Sitecore().Field("Login Dropdown Password Label", accountDataSourceItem)">
                                    </div>
                                    <button class="secondary" type="submit" data-val-submit="">@Html.Sitecore().Field("Login Dropdown Button Text", accountDataSourceItem)</button>
                                    <div class="forgot">
                                        @Html.Sitecore().Field("Login Dropdown Forgot Credentials", accountDataSourceItem)
                                        @Html.Sitecore().Field("Login Dropdown Forgot Username", accountDataSourceItem)
                                        @Html.Sitecore().Field("Login Dropdown Forgot Credentials Divider", accountDataSourceItem)
                                        @Html.Sitecore().Field("Login Dropdown Forgot Password", accountDataSourceItem)
                                    </div>
                                    <div class="create-account">
                                        @Html.Sitecore().Field("Login Dropdown Signup Content", accountDataSourceItem)
                                        @Html.Sitecore().Field("Login Dropdown Signup Link", accountDataSourceItem)
                                    </div>
                                </form>
                            </div>
                        </div>
                    </li>
                </ul>
            }
        </div>
        <a href="" class="nav-toggle icon-hamburger" ng-click="toggleSidebar()">Toggle Nav</a>
        <nav class="main-nav">
            <ul class="wrapper">
                @foreach (var node in topLevelNavigation)
{
    <li class="@(node.Value.HasChildNodes ? "has-subnav" : null) nav-@node.Number nav-@node.Value.Item.Name.ToLowerInvariant()" ng-mouseover="showSubnav(@node.Number)" ng-mouseout="hideSubnav()" ng-class="{ selected: subnav==@node.Number }">
        @Html.Sitecore().Field("Navigation Link", @node.Value.Item)
        @if (node.Value.HasChildNodes)
        {
            <div class="sub-nav" sub-nav="@node.Number" ng-cloak ng-class="{ hidden: subnav != @node.Number }" ng-mouseover="showSubnav(@node.Number)" ng-mouseout="hideSubnav()">
                <ul class="@node.Value.Item.Name.ToLower()">
                    @foreach (ItemSiteMapNode childNode in node.Value.ChildNodes)
                    {
                        var selected = selectedNode != null && (childNode.Url == selectedNode.Url || childNode.Key == selectedNode.Key || selectedNode.IsDescendantOf(childNode));
                        <li class="@(selected ? "selected" : null) @childNode.Item.Name.ToLower()">
                            @Html.Sitecore().Field("Navigation Link", childNode.Item)
                            @{
                                var tertiaryNavCssClassField = Sitecore.Context.Item.Fields["Tertiary Nav CSS Class"];
                            }
                            @if (childNode.Item.HasChildren)
                            {
                                <nav class="tertiary-nav @(tertiaryNavCssClassField != null && !string.IsNullOrEmpty(tertiaryNavCssClassField.Value) ? tertiaryNavCssClassField.Value : "")">
                                    <ul ng-style="{'margin-left': marginLeft}">
                                        @foreach (ItemSiteMapNode thirdchildNode in childNode.ChildNodes)
                                        {
                                            var thirdselected = (selectedNode != null) ? (thirdchildNode.Url == selectedNode.Url || thirdchildNode.Key == selectedNode.Key || selectedNode.IsDescendantOf(thirdchildNode)) : false;
                                            <li class="@(thirdselected ? "selected" : null)">@Html.Sitecore().Field("Navigation Link", thirdchildNode.Item)</li>
                                        }
                                    </ul>
                                </nav>
                            }
                        </li>
                    }
                </ul>
            </div>
        }
    </li>
}
            </ul>
        </nav>
    </div>
</header>
@{
    var bannerImage = Sitecore.Context.Item.Fields["Banner Image"];
    var bannerText = Sitecore.Context.Item.Fields["Banner Text"];
    var pageTitle = Sitecore.Context.Item.Fields["Page Title"];
    var bannerCssClassField = Sitecore.Context.Item.Fields["Banner CSS Classes"];
}
@if (bannerImage != null && !string.IsNullOrEmpty(bannerImage.ToString()))
{
    <div class="banner @(bannerCssClassField != null && !string.IsNullOrEmpty(bannerCssClassField.Value) ? bannerCssClassField.Value : "marketing")" style="@Html.AsBackgroundStyle("Banner Image", Sitecore.Context.Item)">
        <div class="inner">
            <div class="wrapper">
                @if (bannerText != null && !string.IsNullOrEmpty(bannerText.Value))
                {
                    <h1>@Html.Raw(bannerText.Value)</h1>
                }
                else if (pageTitle != null && !string.IsNullOrEmpty(pageTitle.Value))
                {
                    <h1>@pageTitle.Value</h1>
                }
            </div>
        </div>
    </div>
}

@Html.Sitecore().Placeholder("header extra")