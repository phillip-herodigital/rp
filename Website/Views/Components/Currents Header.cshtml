@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using Sitecore.ContentSearch.ComputedFields
@using Sitecore.Data.Fields
@using Sitecore.Links
@using Sitecore.Mvc
@using StreamEnergy.MyStream.Utility
@using System.Collections.Specialized
@using XBlogHelper.Models.Blog
@using XBlogHelper.Search
@using XBlogHelper.General
@{
    Func<string, bool> isLanguageSpanish = languageTag => languageTag.ToLowerInvariant() == "es" || languageTag.StartsWith("es-", StringComparison.InvariantCultureIgnoreCase);
    var languageLinkUrlLanguage = isLanguageSpanish(Sitecore.Context.Language.Name) ? "en" : "es";
    var languageLinkText = isLanguageSpanish(Sitecore.Context.Language.Name) ? "English" : "Español";
    var languageLinkUrl = LinkManager.GetItemUrl(Sitecore.Context.Item, new UrlOptions()
    {
        Language = Sitecore.Globalization.Language.Parse(languageLinkUrlLanguage),
    });

    var selectedNode = SiteMap.CurrentNode;
    int? selectedNodeLevel = null;
    if (selectedNode == null)
    {
        var provider = SiteMap.Provider as NavigationSiteMapProvider;
        if (provider != null)
        {
            selectedNode = Sitecore.Context.Item.GetAncestors().Select(provider.FindSiteMapNode).FirstOrDefault(node => node != null);
        }
    }

    ItemSiteMapNode thirdLevelRootNode = null;
    if (selectedNode != null)
    {
        selectedNodeLevel = selectedNode.Level();
        thirdLevelRootNode = selectedNodeLevel.Value < 2 ? null : (selectedNodeLevel.Value == 2 ? selectedNode : selectedNode.GetAncestor(selectedNodeLevel.Value - 3)) as ItemSiteMapNode;
    }

    var topLevelNavigation = SiteMap.RootNode.ChildNodes.Cast<ItemSiteMapNode>().Select((n, i) => new { Value = n, Number = i + 1 }).ToArray();
    var selectedNavItem = topLevelNavigation.Where(node => selectedNode != null && (node.Value.Key == selectedNode.Key || selectedNode.IsDescendantOf(node.Value))).Select(node => node.Number).FirstOrDefault();

    var blogDataSourceItem = Sitecore.Context.Database.GetItem("/sitecore/content/Home/Currents");
    var settingsItem = XBlogHelper.General.DataManager.GetBlogSettingsItem(blogDataSourceItem != null ? blogDataSourceItem : Sitecore.Context.Item);

}
<header class="site-header" main-nav="@selectedNavItem" data-fixed-fix>
    <script id="mobileNav" type="text/ng-template">
        <nav class="mobile-nav" mobile-nav="@selectedNavItem">
            <ul>
                @foreach (var node in topLevelNavigation)
                {
                    <li ng-class="{ opened: subnav == @node.Number }">
                        <span>
                            @if (node.Value.HasChildNodes)
                            {
                                <span class="arrow" ng-click="toggleSubnav(@node.Number)"><i ng-class="{'icon-nav-arrow-expanded': subnav == @node.Number, 'icon-nav-arrow-collapsed': subnav != @node.Number}"></i></span>
                            }
                            @Html.Sitecore().Field("Navigation Link", node.Value.Item)
                        </span>
                        @if (node.Value.HasChildNodes)
                        {
                            <ul ng-hide="subnav != @node.Number">
                                @foreach (ItemSiteMapNode childNode in node.Value.ChildNodes)
                                {
                                    <li>@Html.Sitecore().Field("Navigation Link", childNode.Item)</li>
                                }
                            </ul>
                        }
                    </li>
                }
                <li><a href="@languageLinkUrl" hreflang="@languageLinkUrlLanguage" lang="@languageLinkUrlLanguage" translate="no">@languageLinkText</a></li>
                <li><a href="/auth/login">Back to Mystream.com</a></li>
            </ul>
        </nav>
    </script>
    <div class="wrapper">
        <a href="/" class="logo">Stream</a>
        <div class="utility">
            <ul>
                <li><a href="@languageLinkUrl" hreflang="@languageLinkUrlLanguage" lang="@languageLinkUrlLanguage" translate="no">@languageLinkText</a></li>
                <li><a href="/auth/login">Back to Mystream.com</a></li>
            </ul>
        </div>
        <a href="" class="nav-toggle icon-hamburger" ng-click="toggleSidebar()">Toggle Nav</a>
        <nav class="main-nav">
            <ul class="wrapper">
                @foreach (var node in topLevelNavigation)
                {
                    <li class="nav-@node.Number nav-@node.Value.Item.Name.ToLowerInvariant()" ng-class="{ selected: subnav==@node.Number }">@Html.Sitecore().Field("Navigation Link", @node.Value.Item)</li>
                }
            </ul>
        </nav>
    </div>
    
</header>


@{
    var slides = new JArray();
    for (var i = 1; i <= 4; i++)
    {
        if (blogDataSourceItem.Fields["Slide " + i + " Image"].HasValue)
        {
            slides.Add(new JObject {
                { "image", Sitecore.Resources.Media.MediaManager.GetMediaUrl(((Sitecore.Data.Fields.FileField)blogDataSourceItem.Fields["Slide " + i + " Image"]).MediaItem) },
                { "text", blogDataSourceItem.Fields["Slide " + i + " Text"].Value },
                { "classes", blogDataSourceItem.Fields["Slide " + i + " CSS Classes"].Value }
            });
        }
    }
}

<carousel interval="5000" ng-init='slides = @Html.Raw(slides.ToString(Formatting.None).Replace("'", "&#39;"));'>
    <slide ng-repeat="slide in slides" active="slide.active" ng-style="{backgroundImage:'url(\''+slide.image+'\')'}">
        <div class="wrapper">
            <div class="content" ng-class="slide.classes" ng-bind-html="slide.text | html"></div>
        </div>
    </slide>
</carousel>
