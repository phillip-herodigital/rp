@{
    var classes = new List<string>();

    var imageOnRightField = (Sitecore.Data.Fields.CheckboxField)Html.Sitecore().CurrentItem.Fields["Image on Right"];
    var backgroundColorField = Html.Sitecore().CurrentItem.Fields["Background Color"];
    var accentColorField = Html.Sitecore().CurrentItem.Fields["Accent Color"];
    var borderColorField = Html.Sitecore().CurrentItem.Fields["Border Color"];
    var backgroundImagePositionField = Html.Sitecore().CurrentItem.Fields["Background Image Position"];
    var customCssClassField = Html.Sitecore().CurrentItem.Fields["Custom CSS Class"];

    if (imageOnRightField != null && imageOnRightField.Checked)
    {
        classes.Add("right-img");
    }

    var colors = Sitecore.Context.Database.GetItem("/sitecore/content/Data/Taxonomy/Modules/Colors").Children;

    if (colors.Any(c => c.Name == backgroundColorField.Value))
    {
        classes.Add("bg-" + colors.First(c => c.Name == backgroundColorField.Value).Fields["CSS Class"].Value);
    }

    if (colors.Any(c => c.Name == accentColorField.Value))
    {
        classes.Add("accent-" + colors.First(c => c.Name == accentColorField.Value).Fields["CSS Class"].Value);
    }

    if (colors.Any(c => c.Name == borderColorField.Value))
    {
        classes.Add("border border-" + colors.First(c => c.Name == borderColorField.Value).Fields["CSS Class"].Value);
    }
    if (customCssClassField != null && !string.IsNullOrEmpty(customCssClassField.Value))
    {
        classes.Add(customCssClassField.Value);
    }

    var backgroundImagePositions = Sitecore.Context.Database.GetItem("/sitecore/content/Data/Taxonomy/Modules/Background Image Positions").Children;
    if (backgroundImagePositions.Any(c => c.Name == backgroundImagePositionField.Value))
    {
        classes.Add(backgroundImagePositions.First(c => c.Name == backgroundImagePositionField.Value).Fields["CSS Class"].Value);
    }
}
<article class="marketing photoLockup @string.Join(" ", classes)">
    <div class="photo" style="@Html.AsBackgroundStyle("Background Image")">
        @{
            if (Sitecore.Context.PageMode.IsPageEditorEditing)
            {
                @Html.Sitecore().Field("Background Image")
            }
        }
    </div>
    <div class="text">
        <div class="inner">
            @{
                if (!string.IsNullOrEmpty(Html.Sitecore().CurrentItem.Fields["Header"].Value))
                {
                    <h2>@Html.Sitecore().Field("Header")</h2>
                }
            }
            @{
                if (!string.IsNullOrEmpty(Html.Sitecore().CurrentItem.Fields["Sub Header"].Value))
                {
                    <h3>@Html.Sitecore().Field("Sub Header")</h3>
                }
            }
            @{
                if (!string.IsNullOrEmpty(Html.Sitecore().CurrentItem.Fields["Quote"].Value))
                {
                    <blockquote>
                        <p>@Html.Sitecore().Field("Quote")</p>
                    </blockquote>
                }
            }
            @{
                if (!string.IsNullOrEmpty(Html.Sitecore().CurrentItem.Fields["Citation"].Value))
                {
                    <p class="cite">&mdash; @Html.Sitecore().Field("Citation")</p>
                }
            }
            @{
                if (!string.IsNullOrEmpty(Html.Sitecore().CurrentItem.Fields["Content"].Value))
                {
                    <p>&mdash; @Html.Sitecore().Field("Content")</p>
                }
            }
            @Html.Sitecore().Field("Button")
        </div>
    </div>
</article>