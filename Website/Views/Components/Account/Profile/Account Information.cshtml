@model StreamEnergy.MyStream.Models.Account.UpdateAccountInformationRequest

<article class="grey-box account account-holder-information" ng-controller="AcctAccountInformationCtrl" ng-init="usStates = @(Html.Action("States", "Data").ToHtmlString()); phoneTypes = @(Html.Action("PhoneCategories", "Data").ToHtmlString());">
    <form ng-submit="updateAccountInformation()" data-val-bind-messages="validations">
        <div class="content" loading-indicator>
            <div ng-show="successMessage">
                <div class="notice success">
                    @Html.Sitecore().Field("Success Message Text")
                </div>
                <hr class="content-divider" />
            </div>
            <div ng-show="errorMessage">
                <div class="notice error">
                    @Html.Sitecore().Field("Error Message Text")
                </div>
                <hr class="content-divider" />
            </div>
            <div class="item account-holder">
                <label class="account-holder-title">@Html.Sitecore().Field("Account Holder Name Text")</label>
                {{ formData.customerName.first }} {{ formData.customerName.last }}
            </div>
            <div class="group">
                <div class="item group-col" @Html.Validation().ErrorClass(model => model.MobilePhone) float-label>
                    <label for="@Html.IdFor(m => m.MobilePhone)">@Html.Sitecore().Field("Mobile Phone Number Text")</label>
                    @Html.TextBoxFor(m => m.MobilePhone, new { type = "tel", ng_model = "formData.mobilePhone", data_val_required = "", data_val_if = "formData.homePhone == ''" })
                    @Html.ValidationMessageFor(model => model.MobilePhone)
                </div>
                <div class="item group-col" @Html.Validation().ErrorClass(model => model.HomePhone) float-label>
                    <label for="@Html.IdFor(m => m.HomePhone)">@Html.Sitecore().Field("Home Phone Number Text")</label>
                    @Html.TextBoxFor(m => m.HomePhone, new { type = "tel", ng_model = "formData.homePhone", data_val_required = "", data_val_if = "formData.mobilePhone == ''" })
                    @Html.ValidationMessageFor(model => model.HomePhone)
                </div>
            </div>
            <div class="group">
                <div class="item group-col" @Html.Validation().ErrorClass(model => model.Email.Address) float-label>
                    <label for="@Html.IdFor(m => m.Email.Address)">@Html.Sitecore().Field("Email Text")</label>
                    @Html.TextBoxFor(m => m.Email.Address, new { ng_model = "formData.email.address" })
                    @Html.ValidationMessageFor(model => model.Email.Address)
                </div>
            </div>
            <hr class="content-divider" />
            <h3 class="billing-address-title">@Html.Sitecore().Field("Billing Address Text")</h3>
            <div class="item">
                <ul class="checkbox-list" ng-show="formData.serviceAddresses[0].line1 && formData.serviceAddresses[0].city && formData.serviceAddresses[0].stateAbbreviation && formData.serviceAddresses[0].postalCode5">
                    <li>
                        <input type="checkbox" name="billing-address" id="billing-address" ng-model="formData.sameAsService">
                        <label for="billing-address">@Html.Sitecore().Field("Same Address Text")</label>
                    </li>
                </ul>
                
                <div class="billing-address-container">
                    <div class="item" ng-show="formData.sameAsService && formData.serviceAddresses.length > 1" @Html.Validation().ErrorClass(m => m.BillingAddress)>
                        <label for="service-address-mailing">@Html.Sitecore().Field("Select Service Address Label")</label>
                        <select id="service-address-mailing"
                                name="@Html.NameFor(m => m.BillingAddress)"
                                data-val="true" data-val-required data-val-if="formData.sameAsService && formData.serviceAddresses.length > 1"
                                ng-model="formData.serviceAddress"
                                ng-options="entry as entry | address for entry in formData.serviceAddresses track by entry | address">
                            <option value="">@Html.Sitecore().Field("Select Option Please Choose")</option>
                        </select>
                    </div>
                    <div class="billing-address" ng-show="formData.sameAsService && formData.serviceAddresses.length == 1">
                        {{ formData.serviceAddress.line1 }} {{ formData.serviceAddressline2 }}<br>
                        {{ formData.serviceAddress.city }}, {{ formData.serviceAddress.stateAbbreviation }} {{ formData.serviceAddress.postalCode5 }}
                    </div>

                    <div ng-hide="formData.sameAsService">
                        <div class="group">
                            <div class="item group-col" @Html.Validation().ErrorClass(model => model.BillingAddress.Line1)>
                                <label for="@Html.IdFor(m => m.BillingAddress.Line1)">@Html.Sitecore().Field("Address 1 Text")</label>
                                @Html.TextBoxFor(m => m.BillingAddress.Line1, new { ng_model = "formData.billingAddress.line1" })
                                @Html.ValidationMessageFor(model => model.BillingAddress.Line1)
                            </div>
                            <div class="item group-col" @Html.Validation().ErrorClass(model => model.BillingAddress.Line2)>
                                <label for="@Html.IdFor(m => m.BillingAddress.Line2)">@Html.Sitecore().Field("Address 2 Text")</label>
                                @Html.TextBoxFor(m => m.BillingAddress.Line2, new { ng_model = "formData.billingAddress.line2" })
                                @Html.ValidationMessageFor(model => model.BillingAddress.Line2)
                            </div>
                        </div>
                        <div class="group">
                            <div class="item group-col" @Html.Validation().ErrorClass(model => model.BillingAddress.City)>
                                <label for="@Html.IdFor(m => m.BillingAddress.City)">@Html.Sitecore().Field("City Text")</label>
                                @Html.TextBoxFor(m => m.BillingAddress.City, new { ng_model = "formData.billingAddress.city" })
                                @Html.ValidationMessageFor(model => model.BillingAddress.City)
                            </div>
                            <div class="item state" @Html.Validation().ErrorClass(model => model.BillingAddress.StateAbbreviation)>
                                <label for="@Html.IdFor(m => m.BillingAddress.StateAbbreviation)">@Html.Sitecore().Field("State Text")</label>
                                @Html.DropDownListFor(m => m.BillingAddress.StateAbbreviation, new SelectListItem[0], new { ng_model = "formData.billingAddress.stateAbbreviation", ng_options = "state.abbreviation as state.display for state in usStates" })
                                @Html.ValidationMessageFor(model => model.BillingAddress.StateAbbreviation)
                            </div>
                            <div class="item zip" @Html.Validation().ErrorClass(model => model.BillingAddress.PostalCode5)>
                                <label for="@Html.IdFor(m => m.BillingAddress.PostalCode5)">@Html.Sitecore().Field("Zip Code Text")</label>
                                @Html.TextBoxFor(m => m.BillingAddress.PostalCode5, new { ng_model = "formData.billingAddress.postalCode5" })
                                @Html.ValidationMessageFor(model => model.BillingAddress.PostalCode5)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <hr class="content-divider" />
            <div class="edit-preferences">
                <div class="item">
                    <ul class="checkbox-list">
                        <li>
                            <input type="checkbox" id="disablePrintedInvoices" ng-model="formData.disablePrintedInvoices" />
                            <label for="disablePrintedInvoices">@Html.Sitecore().Field("Printed Invoices Text")</label>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <footer>
            <div class="buttons">
                <button type="submit" data-val-submit>@Html.Sitecore().Field("Save Button Text")</button>
            </div>
        </footer>
    </form>
</article>
