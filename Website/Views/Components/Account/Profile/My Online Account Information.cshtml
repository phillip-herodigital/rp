@model StreamEnergy.MyStream.Models.Account.UpdateOnlineAccountRequest

@using (new Sitecore.Data.Items.ContextItemSwitcher(Html.Sitecore().CurrentItem))
{
<article class="grey-box account" ng-controller="AcctOnlineAccountCtrl">
    <header>
        <h2>@Html.Sitecore().Field("My Online Account Information Text")</h2>
    </header>
    <form ng-submit="updateOnlineAccount()" data-val-bind-messages="validations">
        <div class="content" data-loading-indicator>
            <div stream-connect-errors="AcctOnlineAccountCtrl"></div>
            <div id="successMessage">
                <div class="notice success" ng-show="successMessage">
                    @Html.Sitecore().Field("Success Message Text")
                </div>
                <hr class="content-divider" ng-show="successMessage" />
            </div>
            @Html.ValidationSummary()
            <div class="group">
                <div class="item group-col" @Html.Validation().ErrorClass(m => m.Username) float-label>
                    <label for="@Html.IdFor(m => m.Username)">@Html.Sitecore().Field("Username Text")</label>
                    <input type="text" id="Username" name="Username" ng-model="formData.username" data-val="true" data-val-required data-val-notequalto data-val-notequalto-other="@Html.NameFor(m => m.Password)">
                    @Html.ValidationMessageFor(m => m.Username)
                </div>
                <div class="item group-col" @Html.Validation().ErrorClass(m => m.Email.Address) float-label>
                    <label for="@Html.IdFor(m => m.Email.Address)">@Html.Sitecore().Field("Email Text")</label>
                    @Html.TextBoxFor(m => m.Email.Address, new { ng_model = "formData.email.address" })
                    @Html.ValidationMessageFor(m => m.Email.Address)
                </div>
            </div>
            <div class="additional-fields group" data-additional-fields>
                <div class="additional-field-action change-password">
                    <span><input type="checkbox" id="changePassword" ng-click="toggleFields()" ng-class="{'collapsed': !isOpen}"></span>
                    <label for="changePassword">@Html.Sitecore().Field("Change Password Text")</label>
                </div>
                <div class="group additional-field-group additional-fields change-password-fields">
                    <div class="group">
                        <div class="item group-col" @Html.Validation().ErrorClass(m => m.CurrentPassword) float-label>
                            <label for="@Html.IdFor(m => m.CurrentPassword)">@Html.Sitecore().Field("Current Password Text")</label>
                            @Html.PasswordFor(m => m.CurrentPassword, new { ng_model = "formData.currentPassword", @class = "maskField", data_val = "true", data_val_required = "", data_val_if = "isOpen" })
                            @Html.ValidationMessageFor(m => m.CurrentPassword)
                        </div>
                        <div class="item group-col"></div>
                    </div>
                    <div class="group">
                        <div class="item group-col" @Html.Validation().ErrorClass(m => m.Password) float-label>
                            <label for="@Html.IdFor(m => m.Password)">@Html.Sitecore().Field("New Password Text")</label>
                            @Html.PasswordFor(m => m.Password, new { ng_model = "formData.password", @class = "maskField", data_val = "true", data_val_required = "", data_val_notequalto_other = "Username", data_val_if = "isOpen" })
                            @Html.ValidationMessageFor(m => m.Password)
                            <span class="help-text">@Html.Sitecore().Field("Password Requirements Text")</span>
                        </div>
                        <div class="item group-col" @Html.Validation().ErrorClass(m => m.ConfirmPassword) float-label>
                            <label for="@Html.IdFor(m => m.ConfirmPassword)">@Html.Sitecore().Field("Confirm Password Text")</label>
                            @Html.PasswordFor(m => m.ConfirmPassword, new { ng_model = "formData.confirmPassword", @class = "maskField", data_val = "true", data_val_required = "", data_val_if = "isOpen" })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword)
                        </div>
                    </div>
                </div>
            </div>

            <hr class="content-divider" />
            @using (var securityQuestion = Html.ClientRepeater(m => m.Challenges, "0"))
            {
                <div class="group">
                    <div class="item group-col" @(securityQuestion.Validation().ErrorClass(m => m.SelectedQuestion.Id))>
                        <label for="@securityQuestion.Fix(h => h.IdFor(m => m.SelectedQuestion.Id))">@Html.Sitecore().Field("Question 1 Label")</label>
                        @securityQuestion.DropDownListFor(m => m.SelectedQuestion.Id, new SelectListItem[0], new { ieselectfix = "", ng_model = "formData.challenges[0].selectedQuestion", ng_options = "question.text for question in formData.availableSecurityQuestions|securityQuestion:selectedIds:0 track by question.id", data_ng_change = "fixIE()", data_val = "true", data_val_required = "" })
                        @securityQuestion.ValidationMessageFor(m => m.SelectedQuestion.Id)
                        <span class="help-text hide-medium-large">{{ formData.challenges[0].selectedQuestion.text }}</span> 
                    </div>
                    <div class="item group-col" @(securityQuestion.Validation().ErrorClass(m => m.Answer)) float-label>
                        <label for="@securityQuestion.Fix(h => h.IdFor(m => m.Answer))">@Html.Sitecore().Field("Question 1 Answer Label")</label>
                        @securityQuestion.Fix(h => h.TextBoxFor(m => m.Answer, new { ng_model = "formData.challenges[0].answer", placeholder = "********", data_val = "true", data_val_if = "formData.challenges[0].answer != ''", data_val_length = "", data_val_length_min = "4" }))
                        @securityQuestion.ValidationMessageFor(m => m.Answer)
                        <span class="help-text">@Html.Sitecore().Field("Question 1 Help Text")</span>
                    </div>
                </div>
            }
            @using (var securityQuestion = Html.ClientRepeater(m => m.Challenges, "1"))
            {
                <div class="group">
                    <div class="item group-col" @(securityQuestion.Validation().ErrorClass(m => m.SelectedQuestion.Id))>
                        <label for="@securityQuestion.Fix(h => h.IdFor(m => m.SelectedQuestion.Id))">@Html.Sitecore().Field("Question 2 Label")</label>
                        @securityQuestion.DropDownListFor(m => m.SelectedQuestion.Id, new SelectListItem[0], new { ieselectfix = "", ng_model = "formData.challenges[1].selectedQuestion", ng_options = "question.text for question in formData.availableSecurityQuestions|securityQuestion:selectedIds:1 track by question.id", data_ng_change = "fixIE()", data_val = "true", data_val_required = "" })
                        @securityQuestion.ValidationMessageFor(m => m.SelectedQuestion.Id)
                        <span class="help-text hide-medium-large">{{ formData.challenges[1].selectedQuestion.text }}</span> 
                    </div>
                    <div class="item group-col" @(securityQuestion.Validation().ErrorClass(m => m.Answer)) float-label>
                        <label for="@securityQuestion.Fix(h => h.IdFor(m => m.Answer))">@Html.Sitecore().Field("Question 2 Answer Label")</label>
                        @securityQuestion.Fix(h => h.TextBoxFor(m => m.Answer, new { ng_model = "formData.challenges[1].answer", placeholder = "********", data_val = "true", data_val_if = "formData.challenges[1].answer != ''", data_val_length = "", data_val_length_min = "4" }))
                        @securityQuestion.ValidationMessageFor(m => m.Answer)
                        <span class="help-text">@Html.Sitecore().Field("Question 2 Help Text")</span>
                    </div>
                </div>
            }
            @*
            <hr class="content-divider" />
            <div class="item">
                <label for="language-preference">@Html.Sitecore().Field("Language Preference Label")</label>
                <ul class="checkbox-list">
                    <li data-ng-repeat="language in formData.availableLanguages">
                        <input type="radio" id="{{language.text}}" ng-model="formData.languagePreference" value="{{ language.text }}" name="language-preference" />
                        <label for="{{language.text}}">{{ language.text }}</label>
                    </li>
                </ul>
            </div>
            *@
            <label for="new-password-repeat">@Html.Sitecore().Field("Confirm New Password Text")</label>
        </div>
        <footer>
            <div class="buttons">
                <button type="submit" data-val-submit>@Html.Sitecore().Field("Save Button Text")</button>
            </div>
        </footer>
    </form>
</article>
}
