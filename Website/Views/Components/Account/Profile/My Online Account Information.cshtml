@model StreamEnergy.MyStream.Models.Account.UpdateOnlineAccountRequest

<article class="grey-box account" ng-controller="AcctOnlineAccountCtrl">
    <header>
        <h2>@Html.Sitecore().Field("My Online Account Information Text")</h2>
    </header>
    <form ng-submit="updateOnlineAccount()" data-val-bind-messages="validations">
        <div class="content" data-loading-indicator>
            <div ng-show="successMessage">
                <div class="notice success">
                    @Html.Sitecore().Field("Success Message Text")
                </div>
                <hr class="content-divider" />
            </div>
            <div class="group">
                <div class="item group-col" @Html.Validation().ErrorClass(model => model.Username) data-float-label>
                    <label for="@Html.IdFor(m => m.Username)">@Html.Sitecore().Field("Username Text")</label>
                    @Html.TextBoxFor(m => m.Username, new { ng_model = "formData.username" })
                    @Html.ValidationMessageFor(model => model.Username)
                </div>
                <div class="item group-col" @Html.Validation().ErrorClass(model => model.Email.Address) data-float-label>
                    <label for="@Html.IdFor(m => m.Email.Address)">@Html.Sitecore().Field("Email Text")</label>
                    @Html.TextBoxFor(m => m.Email.Address, new { ng_model = "formData.email.address" })
                    @Html.ValidationMessageFor(model => model.Email.Address)
                </div>
            </div>
            <div class="additional-fields" data-additional-fields>
                <div class="additional-field-action">
                    <a ng-click="toggleFields()" ng-class="{'collapsed': !isOpen}" href="">@Html.Sitecore().Field("Change Password Text")</a>
                </div>
                <div class="group additional-field-group additional-fields">
                    <div class="group">
                        <div class="item group-col" @Html.Validation().ErrorClass(model => model.CurrentPassword) data-float-label>
                            <label for="@Html.IdFor(m => m.CurrentPassword)">@Html.Sitecore().Field("Current Password Text")</label>
                            @Html.PasswordFor(m => m.CurrentPassword, new { ng_model = "formData.currentPassword" })
                        </div>
                        <div class="item group-col"></div>
                    </div>
                    <div class="group">
                        <div class="item group-col" @Html.Validation().ErrorClass(model => model.Password) data-float-label>
                            <label for="@Html.IdFor(m => m.Password)">@Html.Sitecore().Field("New Password Text")</label>
                            @Html.PasswordFor(m => m.Password, new { ng_model = "formData.password" })
                            @Html.ValidationMessageFor(model => model.Password)
                            <span class="help-text">@Html.Sitecore().Field("Password Requirements Text")</span>
                        </div>
                        <div class="item group-col" @Html.Validation().ErrorClass(model => model.ConfirmPassword) data-float-label>
                            <label for="@Html.IdFor(m => m.ConfirmPassword)">@Html.Sitecore().Field("Confirm Password Text")</label>
                            @Html.PasswordFor(m => m.Password, new { ng_model = "formData.confirmPassword" })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword)
                        </div>
                    </div>
                </div>
            </div>
            <hr class="content-divider" />
            @using (var securityQuestion = Html.ClientRepeater(m => m.Challenges, "0"))
            {
                <div class="group">
                    <div class="item group-col" @(securityQuestion.Validation().ErrorClass(m => m.SelectedQuestion.Id))>
                        <label for="@securityQuestion.Fix(h => h.IdFor(m => m.SelectedQuestion.Id))">@Html.Sitecore().Field("Question 1 Label")</label>
                        @securityQuestion.DropDownListFor(m => m.SelectedQuestion.Id, new SelectListItem[0], new { ng_model="formData.challenges[0].selectedQuestion", ng_options="question.text for question in formData.availableSecurityQuestions|filter:filter2 track by question.id" })
                        @securityQuestion.ValidationMessageFor(m => m.SelectedQuestion.Id)
                    </div>
                    <div class="item group-col" @(securityQuestion.Validation().ErrorClass(m => m.Answer))>
                        <label for="@securityQuestion.Fix(h => h.IdFor(m => m.Answer))">@Html.Sitecore().Field("Question 1 Answer Label")</label>
                        @securityQuestion.Fix(h => h.TextBoxFor(m => m.Answer, new { ng_model = "formData.challenges[0].answer", placeholder = "********" }))
                        @securityQuestion.ValidationMessageFor(m => m.Answer)
                        <span class="help-text">@Html.Sitecore().Field("Question 1 Help Text")</span>                      
                    </div>
                </div>
            }
            @using (var securityQuestion = Html.ClientRepeater(m => m.Challenges, "1"))
            {
                <div class="group">
                    <div class="item group-col" @(securityQuestion.Validation().ErrorClass(m => m.SelectedQuestion.Id))>
                        <label for="@securityQuestion.Fix(h => h.IdFor(m => m.SelectedQuestion.Id))">@Html.Sitecore().Field("Question 2 Label")</label>
                        @securityQuestion.DropDownListFor(m => m.SelectedQuestion.Id, new SelectListItem[0], new { ng_model = "formData.challenges[1].selectedQuestion", ng_options = "question.text for question in formData.availableSecurityQuestions|filter:filter1 track by question.id" })
                        @securityQuestion.ValidationMessageFor(m => m.SelectedQuestion.Id)
                    </div>
                    <div class="item group-col" @(securityQuestion.Validation().ErrorClass(m => m.Answer))>
                        <label for="@securityQuestion.Fix(h => h.IdFor(m => m.Answer))">@Html.Sitecore().Field("Question 2 Answer Label")</label>
                        @securityQuestion.Fix(h => h.TextBoxFor(m => m.Answer, new { ng_model = "formData.challenges[1].answer", placeholder = "********" }))
                        @securityQuestion.ValidationMessageFor(m => m.Answer)
                        <span class="help-text">@Html.Sitecore().Field("Question 2 Help Text")</span>
                    </div>
                </div>
            }
            <hr class="content-divider" />
            <div class="item">
                <label for="language-preference">@Html.Sitecore().Field("Language Preference Label")</label>
                <ul class="checkbox-list">
                    <li data-ng-repeat="language in formData.availableLanguages">
                        <input type="radio" id="{{language.text}}" ng-model="formData.languagePreference" value="{{ language.text }}" name="language-preference" />
                        <label for="{{language.text}}">{{ language.text }}</label>
                    </li>
                </ul>
            </div>
            <label for="new-password-repeat">@Html.Sitecore().Field("Confirm New Password Text")</label>
        </div>
        <footer>
            <div class="buttons">
                <button type="submit" data-val-submit>@Html.Sitecore().Field("Save Button Text")</button>
            </div>
        </footer>
    </form>
</article>
