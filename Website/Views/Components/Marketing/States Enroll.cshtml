@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using Sitecore.Data.Fields
@{
    var item = Html.Sitecore().CurrentRendering.Item;
    var states = ((NameValueListField)item.Fields["State Names"]).NameValues;
    
    var stateEnrollData = new JArray();
    foreach (var state in states)
    {
        var stateName = Server.UrlDecode(states[state.ToString()].ToString());
        var stateClass = stateName.ToLower().Replace(",", "").Replace(".", "").Replace(" ", "-");
        stateEnrollData.Add(new JObject {
            { "name", stateName },
            { "value", state.ToString() },
            { "class", "icon " + stateClass },
            { "enrollmentURL", item.Fields[state.ToString() + " Enrollment Link"].ToString() },
            { "rateURL", Sitecore.Links.LinkManager.GetItemUrl(((LinkField) Html.Sitecore().CurrentRendering.Item.Fields[state.ToString() + " Rates Link"]).TargetItem) }
        });
    }

    var visitor = Sitecore.Analytics.Tracker.Current;

    var selectedState = string.IsNullOrEmpty(visitor.Interaction.GeoData.Region) ? "TX" : visitor.Interaction.GeoData.Region;

    if (!states.AllKeys.Contains(selectedState))
    {
        selectedState = states.AllKeys.First();
    }
}

<article class="marketing state-tabs states-enroll" state-selector="@selectedState" ng-init='stateEnrollData = @Html.Raw(stateEnrollData.ToString(Formatting.None)); selectedStateKey = "@selectedState";'>
    <div class="wrapper grid">
        <div class="col"><h3>@Html.Sitecore().Field("Header")</h3></div>
        <div class="col">
            @Html.Sitecore().Field("Location")
            <div class="input-group-btn" id="state-select" dropdown-select dropdown-items="stateEnrollData" value="selectedStateKey" data-alignment="right"></div>
            <a class="button" ng-href="{{ selectedState.enrollmentURL }}">@Html.Sitecore().Field("Get Started")</a>
        </div>
        <div class="col"><a data-ng-href="{{ selectedState.rateURL }}">@Html.Sitecore().Field("View Rates")</a></div>
    </div>
</article>