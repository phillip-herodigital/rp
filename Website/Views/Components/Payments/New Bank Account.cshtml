@model StreamEnergy.DomainModels.Payments.TokenizedBank
<div ng-init="bankTypes = @(Html.Action("BankCategories", "Data").ToHtmlString());">
    <div class="item" @Html.Validation().ErrorClass(m => m.Category)>
        <label for="@Html.IdFor(m => m.Category)">@Html.Sitecore().Field("Account Type Label")</label>
        @Html.DropDownListFor(m => m.Category, new [] { new SelectListItem { Value = Html.Sitecore().Field("Please Choose").ToString() } }, new { ng_model = "bankCtrl.category", data_val_if="bankCtrl.validate", ng_options = "bankType.name as bankType.display for bankType in bankTypes" })
    </div>
    <div class="group">
        <div class="item group-col" @Html.Validation().ErrorClass(m => m.RoutingNumber)>
            <label for="@Html.IdFor(m => m.RoutingNumber)">@Html.Sitecore().Field("Routing Number Label")</label>
            @Html.TextBoxFor(m => m.RoutingNumber, new { data_val_if = "bankCtrl.validate", ng_model = "bankCtrl.routingNumber" })
        </div>
        <div class="item group-col" data-val-error="PaymentAccount.AccountNumber">
            <label for="bank-account-number">@Html.Sitecore().Field("Account Number Label"):</label>
            <input id="bank-account-number" name="PaymentAccount.AccountNumber" data-val="true" data-val-if="bankCtrl.validate" data-val-required="@Html.Sitecore().Field("Account Number Required")" data-val-digits tokenize-field="{'type':'bank','tokenizerDomain':'@Html.GetSetting("Tokenizer", "Tokenizer Domain")'}" ng-model="bankCtrl.accountToken" type="text">
        </div>
    </div>
    <p class="example-image">
        @Html.Sitecore().Field("Check Sample Image")
    </p>
</div>