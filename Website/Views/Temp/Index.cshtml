@model StreamEnergy.MyStream.Controllers.TempController.SampleModel
@using System.Linq.Expressions;
@using StreamEnergy.Extensions;

@*<script src="http://ajax.microsoft.com/ajax/jQuery/jquery-1.8.0.min.js"></script>
    <script src="http://ajax.microsoft.com/ajax/jquery.validate/1.8/jquery.validate.js"></script>
    <script src="http://ajax.aspnetcdn.com/ajax/mvc/5.1/jquery.validate.unobtrusive.js"></script>*@

<script>
    ngApp.controller('mainController', ['$scope', function ($scope) {
        $scope.data = {};
        $scope.provideEmail = true;
        $scope.email = '@(Model != null && Model.ContactInfo != null && Model.ContactInfo.Email != null ? Model.ContactInfo.Email.Address : null)';
    }]);
</script>

<div ng-controller="mainController">
    <form name="myForm" action="/mjd" method="post">
        @Html.ValidationSummary()

        @Html.AllValidationMessagesFor(model => model)

        <p>
            <label for="provideEmail">Provide Email?</label> <input type="checkbox" id="provideEmail" ng-model="provideEmail" />
        </p>
        <p @Html.Validation().ErrorClass(model => model.ContactInfo.Email.Address) data-ng-if="provideEmail">
            @Html.TextBoxFor(m => m.ContactInfo.Email.Address, new { data_val_if="provideEmail", data_val_realtime="", ng_model="email" })
            @Html.ValidationMessageFor(model => model.ContactInfo.Email.Address)
        </p>

        @using (var phone = Html.ClientRepeater(model => model.ContactInfo.Phone, "0")) { 
        <p @phone.Validation().ErrorClass(model => model.Number)>
            @phone.Fix( h => h.TextBoxFor(m => m.Number, new { g_model = "primaryPhone" }))
            @phone.ValidationMessageFor(model => model.Number)
        </p>
        }

        <div>
            Correct:
            <p>RequireChecked - {{data.RequireChecked}}<br />@Html.CheckBoxFor(m => m.RequireChecked, new { data_val_realtime="", ng_model="data.RequireChecked" })@Html.ValidationMessageFor(model => model.RequireChecked) </p>

            <p>CardNumber - {{data.CardNumber }}<br />@Html.TextBoxFor(m => m.CardNumber    , new { data_val_realtime = "", ng_model="data.CardNumber"  } ) @Html.ValidationMessageFor(model => model.CardNumber) </p>
            <p>Date       - {{data.Date       }}<br />@Html.TextBoxFor(m => m.Date          , new { data_val_realtime = "", ng_model="data.Date"        } ) @Html.ValidationMessageFor(model => model.Date)                   </p>
            <p>Integer    - {{data.Integer    }}<br />@Html.TextBoxFor(m => m.Integer       , new { data_val_realtime = "", ng_model="data.Integer"     } ) @Html.ValidationMessageFor(model => model.Integer)          </p>
            <p>Single     - {{data.Single     }}<br />@Html.TextBoxFor(m => m.Single        , new { data_val_realtime = "", ng_model="data.Single"      } ) @Html.ValidationMessageFor(model => model.Single)             </p>
            <p>Url2       - {{data.Url2       }}<br />@Html.TextBoxFor(m => m.Url2          , new { data_val_realtime = "", ng_model="data.Url2"        } ) @Html.ValidationMessageFor(model => model.Url2)                   </p>
            <p>MinLength  - {{data.MinLength  }}<br />@Html.TextBoxFor(m => m.MinLength     , new { data_val_realtime = "", ng_model="data.MinLength"   } ) @Html.ValidationMessageFor(model => model.MinLength)    </p>
            <p>MaxLength  - {{data.MaxLength  }}<br />@Html.TextBoxFor(m => m.MaxLength     , new { data_val_realtime = "", ng_model="data.MaxLength"   } ) @Html.ValidationMessageFor(model => model.MaxLength)    </p>
            <p>Range      - {{data.Range      }}<br />@Html.TextBoxFor(m => m.Range         , new { data_val_realtime = "", ng_model="data.Range"       } ) @Html.ValidationMessageFor(model => model.Range)                </p>
            <p>Password   - {{data.Password   }}<br />@Html.TextBoxFor(m => m.Password      , new { data_val_realtime = "", ng_model="data.Password"    } ) @Html.ValidationMessageFor(model => model.Password)       </p>
            <p>StrLen     - {{data.StrLen     }}<br />@Html.TextBoxFor(m => m.StrLen        , new { data_val_realtime = "", ng_model="data.StrLen"      } ) @Html.ValidationMessageFor(model => model.StrLen)             </p>
            <p>Match      - {{data.Match      }}<br />@Html.TextBoxFor(m => m.Match         , new { data_val_realtime = "", ng_model="data.Match"       } ) @Html.ValidationMessageFor(model => model.Match)                </p>
            <p>FileName   - {{data.FileName   }}<br />@Html.TextBoxFor(m => m.FileName      , new { data_val_realtime = "", ng_model="data.FileName"    } ) @Html.ValidationMessageFor(model => model.FileName)       </p>
            <p>Data       - {{data.Data       }}<br />@Html.TextBoxFor(m => m.Data          , new { data_val_realtime = "", ng_model="data.Data"        } ) @Html.ValidationMessageFor(model => model.Data)                   </p>

        </div>

        @*<div>
            Not quite supported by Angular:
            <p>PostedFile - {{data.PostedFile }}<br /><input type="file" @Html.ValidationAttributes(m => m.PostedFile) data-val-realtime ng-model="data.PostedFile" /> @Html.ValidationMessageFor(model => model.PostedFile) </p>
        </div>*@


        <button type="submit" name="btnSubmit" data-val-submit>Register</button>

        <p>myForm.$valid = {{myForm.$valid}}</p>
    </form>
</div>