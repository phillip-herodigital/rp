@{    
    var gasUtilities = (from utility in ((Sitecore.Data.Fields.MultilistField)Html.Sitecore().CurrentItem.Fields["Gas Utilities"]).Items
                        let item = Sitecore.Context.Database.GetItem(new Sitecore.Data.ID(new Guid(utility)))
                        select item.Name.Replace(" Utility Title", "")).ToArray();

    var electricUtilities = (from field in Html.Sitecore().CurrentItem.Fields
                             where field.Name.EndsWith("Utility Title")
                             where !gasUtilities.Any(GU => GU == field.Name.Replace(" Utility Title", ""))
                             select field.Name.Replace(" Utility Title", "")).ToArray();

    var ratesChildren = Html.Sitecore().LookupItem("Rates Parent").Children;

    var electricPlans = (from folder in ratesChildren
                         let items = folder.Children
                             from item in items
                             where item.Fields.Any(field => electricUtilities.Any(EU => EU + " Current Price" == field.Name))
                             let endingDateField = (Sitecore.Data.Fields.DateField)item.Fields["Ending Date"]
                             where endingDateField.DateTime == null || endingDateField.DateTime == DateTime.MinValue || endingDateField.DateTime >= DateTime.Today
                             select item).ToArray();

    var gasPlans = (from folder in ratesChildren
                    let items = folder.Children
                        from item in items
                        where item.Fields.Any(field => gasUtilities.Any(GU => GU + " Current Price" == field.Name))
                        let endingDateField = (Sitecore.Data.Fields.DateField)item.Fields["Ending Date"]
                        where endingDateField.DateTime == null || endingDateField.DateTime == DateTime.MinValue || endingDateField.DateTime >= DateTime.Today
                        select item).ToArray();

    var electricTables = from utility in electricUtilities
                         select new
                         {
                             HeaderField = utility + " Utility Title",
                             Rows = from plan in electricPlans
                                    where !string.IsNullOrEmpty(plan.Fields[utility + " Current Price"].Value)
                                    select new
                                    {
                                        Item = plan,
                                        Prefix = utility,
                                    }
                         };

    var gasTables = from utility in gasUtilities
                    select new
                    {
                        HeaderField = utility + " Utility Title",
                        Rows = from plan in gasPlans
                               where !string.IsNullOrEmpty(plan.Fields[utility + " Current Price"].Value)
                               select new
                               {
                                   Item = plan,
                                   Prefix = utility,
                               }
                    };
}
<article class="marketing wrapper rates northeast">
    <h1>@Html.Sitecore().Field("Header")</h1>

    @Html.Sitecore().Field("Page Intro")
    <table>
        @foreach (dynamic table in electricTables)
        {
            <tbody>
                <tr>
                    <th>@Html.Sitecore().Field(table.HeaderField)</th>
                    <th>@Html.Sitecore().Field("Current Price per KwH")</th>
                    <th>@Html.Sitecore().Field("Monthly Customer Service Fee")</th>
                    <th>@Html.Sitecore().Field("Term")</th>
                    <th>@Html.Sitecore().Field("Early Cancellation Fee")</th>
                </tr>
                @foreach (dynamic row in table.Rows)
                {
                    var defaultLanguageItem = (Sitecore.Data.Items.Item)row.Item;
                    if (defaultLanguageItem.Language != Sitecore.Data.Managers.LanguageManager.DefaultLanguage)
                    {
                        defaultLanguageItem = Sitecore.Context.Database.GetItem(((Sitecore.Data.Items.Item)row.Item).ID, Sitecore.Data.Managers.LanguageManager.DefaultLanguage);
                    }
                    <tr>
                        <td>@Html.Sitecore().Field("Plan Title", row.Item)</td>
                        <td>@Html.AsMoney((string)row.Prefix + " Current Price", defaultLanguageItem, 4)</td>
                        <td>@Html.AsMoney((string)row.Prefix + " Monthly Customer Service Fee", defaultLanguageItem)</td>
                        <td class="term">@Html.Sitecore().Field(row.Prefix + " Term", row.Item)</td>
                        <td>@Html.AsMoney((string)row.Prefix + " Early Cancellation Fee", defaultLanguageItem)</td>
                    </tr>
                }
            </tbody>
        }
        @foreach (dynamic table in gasTables)
        {
            <tbody>
                <tr>
                    <th>@Html.Sitecore().Field(table.HeaderField)</th>
                    <th>@Html.Sitecore().Field("Current Price per Therm")</th>
                    <th>@Html.Sitecore().Field("Monthly Customer Service Fee")</th>
                    <th>@Html.Sitecore().Field("Term")</th>
                    <th>@Html.Sitecore().Field("Early Cancellation Fee")</th>
                </tr>
                @foreach (dynamic row in table.Rows)
                {
                    var defaultLanguageItem = (Sitecore.Data.Items.Item)row.Item;
                    if (defaultLanguageItem.Language != Sitecore.Data.Managers.LanguageManager.DefaultLanguage)
                    {
                        defaultLanguageItem = Sitecore.Context.Database.GetItem(((Sitecore.Data.Items.Item)row.Item).ID, Sitecore.Data.Managers.LanguageManager.DefaultLanguage);
                    }                    <tr>
                        <td>@Html.Sitecore().Field("Plan Title", row.Item)</td>
                        <td>@Html.AsMoney((string)row.Prefix + " Current Price", defaultLanguageItem, 4)</td>
                        <td>@Html.AsMoney((string)row.Prefix + " Monthly Customer Service Fee", defaultLanguageItem)</td>
                        <td class="term">@Html.Sitecore().Field(row.Prefix + " Term", row.Item)</td>
                        <td>@Html.AsMoney((string)row.Prefix + " Early Cancellation Fee", defaultLanguageItem)</td>
                    </tr>
                }
            </tbody>
        }
    </table>
    @Html.Sitecore().Field("Page Outro")
</article>