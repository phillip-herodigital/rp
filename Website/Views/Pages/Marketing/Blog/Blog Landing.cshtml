@using System.Linq
@using Sitecore.Data.Fields
@using Sitecore.Data.Items
@using Humanizer
@using StreamEnergy.MyStream.Utility
@{
    string pageHeader = null;

    IEnumerable<Item> blogPostItems = Html.Sitecore().CurrentItem.Children.OrderByDescending(i => ((DateField)i.Fields["Date"]).DateTime).ToArray();
    var categoriesCounts = blogPostItems.SelectMany(blogItem => ((MultilistField) blogItem.Fields["Categories"]).GetItems()).GroupBy(categoryItem => categoryItem.ID).Select(g => new KeyValuePair<Item, int>(g.First(), g.Count())).OrderBy(kv => kv.Key["Category Title"]);
    var archiveMonths = blogPostItems.Select(item =>
    {
        var date = ((DateField)item.Fields["Date"]).DateTime;
        return new DateTime(date.Year, date.Month, 1);
    }).Distinct().OrderByDescending(date => date);

    var categories = categoriesCounts.Where(i => i.Key.Name == Request.QueryString["catgory"]).Select(i => i.Key).ToArray();
    if (categories.Any())
    {
        pageHeader = categories.Select(c => c["Category Title"]).Humanize();
    }

    var archiveMonth = archiveMonths.Cast<DateTime?>().FirstOrDefault(m => m.Value.ToString("yyyyMM") == Request.QueryString["archive"]);
    if (archiveMonth.HasValue)
    {
        pageHeader = archiveMonth.Value.ToString("MMMM yyyy");
    }
    
    blogPostItems = blogPostItems
        .Where(blogItem => (!categories.Any() || ((MultilistField)blogItem.Fields["Categories"]).GetItems().Any(categoryItem =>  categories.Select(c => c.ID).Contains(categoryItem.ID))) && (archiveMonth == null || ((DateField)blogItem.Fields["Date"]).DateTime.ToString("yyyyMM") == archiveMonth.Value.ToString("yyyyMM")))
        .OrderByDescending(blogItem => ((DateField)blogItem.Fields["Date"]).DateTime);

    var paginationHelper = Html.GetPaginationHelper(blogPostItems);
}
<div class="layout cols-2 wrapper">
    <div class="layout cols-1">
        <article class="module marketing blog">
            @if (pageHeader != null)
            {
                <h3>@pageHeader</h3>
            }
            @foreach (var item in paginationHelper.CurrentItems)
            {
                <article class="post">
                    <header>
                        <h4><a href="@Sitecore.Links.LinkManager.GetItemUrl(item)">@Html.Sitecore().Field("Title", item)</a></h4>
                        <p class="date">@Html.Sitecore().Field("Posted On Text", item): @Html.Sitecore().Field("Date", item, new { format = "MMMM d, yyyy" }) | @Html.Sitecore().Field("By Text", item): @Html.Sitecore().Field("Author", item)</p>
                    </header>
                    @(!string.IsNullOrEmpty(@Html.Sitecore().Field("Excerpt", item).ToHtmlString()) ? Html.Sitecore().Field("Excerpt", item) : Html.Truncate(item["Content"], 200))
                    <footer>
                        <p><a href="@Sitecore.Links.LinkManager.GetItemUrl(item)" class="button">@Html.Sitecore().Field("Read Full Post Text", item)</a></p>
                    </footer>
                </article>
            }
            @paginationHelper.GetPaginationHtml()
        </article>
    </div>
    <aside>
        <h3>@Html.Sitecore().Field("Categories Text")</h3>
        <ul>
            @foreach (var categoryCount in categoriesCounts)
            {
                <li><a href="?catgory=@Url.Encode(categoryCount.Key.Name)">@Html.Sitecore().Field("Category Title", categoryCount.Key) (@categoryCount.Value)</a></li>
            }
        </ul>
        <h3>@Html.Sitecore().Field("Archives Text")</h3>
        <ul>
            @foreach (var month in archiveMonths)
            {
                <li><a href="?archive=@Url.Encode(month.ToString("yyyyMM"))">@month.ToString("MMMM yyyy")</a></li>
            }
        </ul>
    </aside>
</div>