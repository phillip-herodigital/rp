@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using Sitecore.Data.Fields
@using Sitecore.Form.Web.UI.Controls
@{
    var stateFaqs = new Dictionary<string, List<Sitecore.Data.Items.Item>>();
    foreach (Sitecore.Data.Items.Item item in Html.Sitecore().CurrentItem.Children)
    {
        var faqStatesField = (Sitecore.Data.Fields.MultilistField)item.Fields["FAQ States"];
        foreach (var state in faqStatesField.GetItems())
        {
            if (!stateFaqs.ContainsKey(state.Name))
            {
                stateFaqs.Add(state.Name, new List<Sitecore.Data.Items.Item>());
            }
            stateFaqs[state.Name].Add(item);
        }
    }

    var stateTitleFieldNames = new Dictionary<string, string>()
    {
        {"texas", "Texas Title"},
        {"georgia", "Georgia Title"},
        {"pennsylvania", "Pennsylvania Title"},
        {"maryland", "Maryland Title"},
        {"new-jersey", "New Jersey Title"},
        {"new-york", "New York Title"},
        {"washington-dc", "Washington DC Title"}
    };

    var visitor = Sitecore.Analytics.Tracker.Current;

    var selectedTab = "";

    switch (visitor.Interaction.GeoData.Region)
    {
        case "TX":
            selectedTab = "texas";
            break;
        case "GA":
            selectedTab = "georgia";
            break;
        case "PA":
            selectedTab = "pennsylvania";
            break;
        case "MD":
            selectedTab = "maryland";
            break;
        case "NJ":
            selectedTab = "new-jersey";
            break;
        case "NY":
            selectedTab = "new-york";
            break;
        case "DC":
            selectedTab = "washington-dc";
            break;
        default:
            selectedTab = "texas";
            break;
    }
    var stateEnrollData = new JArray();
    foreach (var state in stateTitleFieldNames)
    {
        var stateClass = state.Value.ToLower().Replace(",", "").Replace(".", "").Replace(" ", "-");
        stateEnrollData.Add(new JObject {
            { "name", Html.Sitecore().Field(stateTitleFieldNames[state.Key.ToString()]).ToHtmlString() },
            { "value", state.Key },
            { "class", "icon " + state.Key },
        });
    }
}
<div ng-controller="FaqsCtrl" ng-init='stateEnrollData = @Html.Raw(stateEnrollData.ToString(Formatting.None)); selectedStateKey = "@selectedTab";'>
    <article class="marketing state-tabs" state-selector="@selectedTab" ng-init='stateEnrollData = @Html.Raw(stateEnrollData.ToString(Formatting.None)); selectedStateKey = "@selectedTab";'>
        <div class="wrapper">
            <p>@Html.Sitecore().Field("Dropdown Text")</p>
            <div class="input-group-btn" id="state-select" dropdown-select dropdown-items="stateEnrollData" value="selectedStateKey" data-alignment="right"></div>
        </div>
    </article>
    <article class="marketing faq">
        <div class="wrapper">
            @foreach (var state in stateFaqs.Keys)
            {
                <div data-ng-show="selectedState.value == @state.ToJson()">
                    <h1>@Html.Sitecore().Field(stateTitleFieldNames[state]) FAQ’s</h1>
                    <dl class="faq">
                        @foreach (var item in stateFaqs[state])
                        {
                            <dt data-collasped onclick="this.hasAttribute('data-collasped') ? this.removeAttribute('data-collasped') : this.setAttribute('data-collasped','data-collasped')">@Html.Sitecore().Field("FAQ Question", item)</dt>
                            <dd>@Html.Sitecore().Field("FAQ Answer", item)</dd>
                        }
                    </dl>
                </div>
            }
        </div>
        <div style="clear: both;"></div>
    </article>
</div>