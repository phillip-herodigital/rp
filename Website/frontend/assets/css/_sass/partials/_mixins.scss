// Usage @include breakpoint(small) { /* Styles here */ }
@mixin breakpoint($point) {
	@if $point == large {
		@media only screen and (min-width : $breakpoint-medium + 1) { @content; }
	}
	@else if $point == medium-large {
		@media only screen and (min-width: $breakpoint-small + 1) { @content; }
	}
	@else if $point == medium {
		@media only screen and (min-width: $breakpoint-small + 1) and (max-width: $breakpoint-medium) { @content; }
	}
	@else if $point == small-medium {
		@media only screen and (max-width: $breakpoint-medium) { @content; }
	}
	@else if $point == small {
		@media only screen and (max-width: $breakpoint-small) { @content; }
	}
}

@mixin breakpoint-max($width) {
	@media only screen and (max-width: $width) { @content; }
}

@mixin breakpoint-min($width) {
	@media only screen and (max-width: $width) { @content; }
}

@mixin breakpoint-min-max($minWidth, $maxWidth) {
	@media only screen and (min-width: $minWidth) and (max-width: $maxWidth) { @content; }
}

@mixin image-replace($imgName, $retinaImgName: false) {
	display: inline-block;
	width: image-width($imgName);
	height: image-height($imgName);
	background-image: image-url($imgName);
	background-repeat: no-repeat;
	text-indent: -5000px;
    @if $retinaImgName {
        @media (-webkit-min-device-pixel-ratio: 2), (-o-min-device-pixel-ratio: 3/2), (min--moz-device-pixel-ratio: 2), (min-device-pixel-ratio: 2), (min-resolution: 144dpi), (min-resolution: 2dppx) {
            background-image: image-url($retinaImgName);
			background-size: (image-width($retinaImgName) / 2) ceil(image-height($retinaImgName) / 2);
        }
    }
}

@mixin retina-background($imgName, $path: 'bg') {
	background-image: image-url("#{$path}/#{$imgName}");

	@if image-exists("#{$path}2x/#{$imgName}") {
		@media (-webkit-min-device-pixel-ratio: 2), (-o-min-device-pixel-ratio: 3/2), (min--moz-device-pixel-ratio: 2), (min-device-pixel-ratio: 2), (min-resolution: 144dpi), (min-resolution: 2dppx) {
			background-image: image-url("#{$path}2x/#{$imgName}");
			background-size: (image-width("#{$path}2x/#{$imgName}") / 2) ceil(image-height("#{$path}2x/#{$imgName}") / 2);
		}
	}
}

@mixin layout-list {
	@include no-bullet;
	margin: 0;
	padding: 0;
}

@mixin navigation-list {
    list-style-type: none;
    padding: 0;
    margin: 0;
    overflow: hidden;
    > li {
        display:block;
        float:left;
        &:last-child{
            margin-right: 0px;
        }
    }
}

@mixin input-group {
    position: relative; // For dropdowns
    display: table;
    border-collapse: separate; // prevent input groups from inheriting border styles from table cells when placed within a table
	border-spacing: 0;

    .input-group-control input, .input-group-control button, .input-group-control select {
        position: relative;
        z-index: 2;
        float: left;
        width: 100%;
    }

    .input-group-control + .input-group-btn {
        padding-left: 5px;
        padding-right: 0;
    }

    &.collapsed {
    	.input-group-control input {
			@include border-radius(10px 0 0 10px);
			border-right: none;
    	}
        .input-group-control + .input-group-btn {
            padding-left: 0;
            padding-right: 0;

            button {
            	@include border-radius(0 10px 10px 0);
        	}
        }
    }

	// Display as table-cell
	// -------------------------
	.input-group-addon,
	.input-group-btn,
	.input-group-control {
	    display: table-cell;

	    &:not(:first-child):not(:last-child) {
	        border-radius: 0;
	    }
	}
	// Addon and addon wrapper for buttons
	.input-group-addon,
	.input-group-btn {
	    width: 1%;
	    white-space: nowrap;
	    vertical-align: top; // Match the inputs
	}

	.input-group-btn button {
	    width: auto;
	}

	// Text input groups
	// -------------------------
	.input-group-addon {
	    font-weight: normal;
	    line-height: 1;
	    text-align: center;
	}

	// Button input groups
	// -------------------------
	.input-group-btn {
	    position: relative;
	    white-space: nowrap;
	    padding-right: 5px;

	    > .btn, > button, > .button {
	        position: relative;
	        + .btn {
	            margin-left: -1px;
	        }
	        &:hover, &:focus, &:active {
	            z-index: 2;
	        }
	    }
	}
}

/**
 * Backwards compatitbility for IE8 opacity
 */
@mixin background-opacity($color, $opacity) {
	background: image-url("../i/{$color}-alpha-{$opacity}.png") repeat;
	background: rgba($color, $opacity / 100);
}