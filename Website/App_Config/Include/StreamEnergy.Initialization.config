<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <settings>
      <setting name="DynEtc.username" value="FLWufiIg@mtacustomer.sitecore.net" />
      <setting name="DynEtc.password" value="YT4yugEqv93o3tH3" />
      <setting name="DynEtc.server" value="smtp.dynect.net" />
      <setting name="DynEtc.fromAddress" value="noreply@mystream.com" />
      <setting name="GeoIP2.DbLocation" value="~/Data/GeoLite2-City.mmdb"/>
      <setting name="LicenseFile" value="/data/license.xml" />
      <setting name="Sitecore.Services.RouteMapper" >
        <patch:attribute name="value" value="StreamEnergy.Mvc.CustomRouteMapper, StreamEnergy.Core" />
      </setting>
      <setting name="ItemNotFoundUrl">
        <patch:attribute name="value">/page-not-found.aspx</patch:attribute>
      </setting>
      <setting name="LinkItemNotFoundUrl">
        <patch:attribute name="value">/page-not-found.aspx</patch:attribute>
      </setting>
      <setting name="LayoutNotFoundUrl">
        <patch:attribute name="value">/page-not-found.aspx</patch:attribute>
      </setting>
      <setting name="ErrorPage">
        <patch:attribute name="value">/server-error.aspx</patch:attribute>
      </setting>
      <setting name="NoAccessUrl">
        <patch:attribute name="value">/auth/login</patch:attribute>
      </setting>
    </settings>
    <pipelines>
      <initialize>
        <processor patch:before="processor[@type='Sitecore.Mvc.Pipelines.Loader.InitializeGlobalFilters, Sitecore.Mvc']"
           type="StreamEnergy.Pipelines.RegisterPlatformBundles, StreamEnergy.Core" />
        <processor type="StreamEnergy.Pipelines.InitializeUnityContainer, StreamEnergy.Core" />
        <processor type="StreamEnergy.Pipelines.RegisterMvcFactories, StreamEnergy.Core" />
        <processor type="StreamEnergy.MyStream.Pipelines.InitializeWebApi, StreamEnergy.MyStream" />
        <processor type="StreamEnergy.MyStream.Pipelines.EcmRenderer, StreamEnergy.MyStream" />
      </initialize>
      <renderField>
        <processor type="StreamEnergy.Pipelines.RenderField.GetTextFieldValueExtended, StreamEnergy.Core" patch:after="processor[@type='Sitecore.Pipelines.RenderField.GetTextFieldValue, Sitecore.Kernel']" />
        <processor type="StreamEnergy.Pipelines.RenderField.GetTextFieldValueExtended, StreamEnergy.Core" patch:after="processor[@type='Sitecore.Pipelines.RenderField.GetLinkFieldValue, Sitecore.Kernel']" />
      </renderField>
      <mvc.renderRendering>
        <processor type="StreamEnergy.Pipelines.GenerateCustomCacheKey, StreamEnergy.Core" patch:instead="processor[@type='Sitecore.Mvc.Pipelines.Response.RenderRendering.GenerateCacheKey, Sitecore.Mvc']"/>
      </mvc.renderRendering>
      <mvc.exception>
        <processor type="StreamEnergy.Pipelines.LogException, StreamEnergy.Core" patch:before="processor" />
      </mvc.exception>
      <preprocessRequest>
        <!--
        Commenting the below lines out because they break the ScriptResource.axd requests in the
        admin. I'm not sure why this was here so I'm not sure how to fix it properly so I'm just
        removing the lines completely. This was initially checked in this way to get Sitecore to
        handle all requests.
        -->
        <!--
        <processor type="Sitecore.Pipelines.PreprocessRequest.FilterUrlExtensions, Sitecore.Kernel">
          <patch:delete />
        </processor>
        -->
      </preprocessRequest>
      <httpRequestBegin>
        <processor type="StreamEnergy.Pipelines.VanityUrlRedirect, StreamEnergy.Core" patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']" />
        <processor type="StreamEnergy.Pipelines.CurrentsUrlRedirect, StreamEnergy.Core" patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.DatabaseResolver, Sitecore.Kernel']" />
        <processor type="StreamEnergy.Pipelines.HTTPToHTTPSRedirect, StreamEnergy.Core" patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']" />
        <processor type="StreamEnergy.MyStream.Pipelines.SetSponsorCookie, StreamEnergy.MyStream" patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']" />
      </httpRequestBegin>
      <SendEmail>
        <processor type="StreamEnergy.MyStream.Pipelines.PopulateUnsubscribeLink, StreamEnergy.MyStream" patch:before="processor[@type='Sitecore.Modules.EmailCampaign.Core.Pipelines.SendEmail.FillEmail, Sitecore.EmailCampaign']" />
      </SendEmail>
    </pipelines>
    <!--<lookupmanager>
      <patch:attribute name="defaultProvider">geoLite</patch:attribute>
      <providers>
        <add name="geoLite" type="StreamEnergy.Providers.GeoProvider,StreamEnergy.Core" patch:after="processor[@type='Sitecore.Analytics.Lookups.MaxMindProvider,Sitecore.Analytics']">
        </add>
      </providers>
    </lookupmanager>-->
    <linkManager>
      <providers>
        <clear />
        <add name="sitecore">
          <patch:attribute name="addAspxExtension">false</patch:attribute>
        </add>
      </providers>
    </linkManager>
    <itemManager defaultProvider="default">
      <providers>
        <add name="default">
          <patch:attribute name="type">StreamEnergy.Providers.ItemProvider,StreamEnergy.Core</patch:attribute>
        </add>
      </providers>
    </itemManager>
    <mediaLibrary>
      <mediaProvider type="StreamEnergy.Providers.MediaProvider, StreamEnergy.Core" patch:instead="mediaProvider[@type='Sitecore.Resources.Media.MediaProvider, Sitecore.Kernel']" />
      <mediaTypes>
        <mediaType name="PDF file" extensions="pdf">
          <mimeType>application/pdf</mimeType>
          <forceDownload>false</forceDownload>
          <sharedTemplate>system/media/unversioned/pdf</sharedTemplate>
          <versionedTemplate>system/media/versioned/pdf</versionedTemplate>
        </mediaType>
      </mediaTypes>
    </mediaLibrary>
    <controlSources>
      <source mode="on" namespace="StreamEnergy.MyStream.Fields" assembly="StreamEnergy.MyStream" prefix="StreamEnergyFields" />
    </controlSources>
  </sitecore>
</configuration>