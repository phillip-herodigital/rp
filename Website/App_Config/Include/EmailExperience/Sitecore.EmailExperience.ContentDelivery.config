<configuration xmlns:x="http://www.sitecore.net/xmlconfig/">
  <sitecore>

    <exm>
      <!-- ROLES
           Describes which Email Experience Manager server roles are enabled by this configuration file.
      -->
      <roles>
        <role name="Content Delivery" />
      </roles>

      <web>
        <webSession type="Sitecore.ExM.Framework.Distributed.Sessions.Session,Sitecore.ExM.Framework" singleInstance="true">
          <members hint="list:AddMember">
            <webAgent ref="exm/web/emailOpenTaskAgent" />
          </members>
        </webSession>

        <emailOpenTaskAgent type="Sitecore.ExM.Framework.Distributed.Tasks.Processing.ShortRunning.DatabaseTaskAgent,Sitecore.ExM.Framework" singleInstance="true">
          <param desc="taskPool" ref="emailOpenTaskPool" />
          <param desc="targetMinBufferAmount">10</param>
          <param desc="maxBatchSize">200</param>
          <param desc="idleIterationDuration">00:00:10.000</param>
          <param desc="activeIterationDuration">00:00:00.500</param>
          <param desc="leaseTime">00:03:00.000</param>
          <param desc="postponeTime">00:30:00.000</param>
          <param desc="maxDegreeOfParallelism">10</param>
          <param desc="maxFailedProcessingAttempts">5</param>
          <param desc="processor" ref="emailOpenTaskProcessor" />
          <param desc="logger" ref="exmLogger" />
        </emailOpenTaskAgent>
      </web>
    </exm>

    <emailEventStorage type="Sitecore.EmailCampaign.Cd.EmailEvents.EmailEventStorageCache, Sitecore.EmailCampaign.Cd" singleInstance="true">
      <param desc="maxCacheSize">1024</param>
      <param desc="storage" ref="webDataProviderStorage"/>
    </emailEventStorage>

    <webDataProviderStorage type="Sitecore.EmailCampaign.Cd.EmailEvents.WebDataProvider, Sitecore.EmailCampaign.Cd" singleInstance="true">
      <param desc="connectionStringName">exm.web</param>
    </webDataProviderStorage>

    <emailOpenTaskProcessor type="Sitecore.EmailCampaign.Cd.Tasks.EmailOpenedTaskProcessor, Sitecore.EmailCampaign.Cd" singleInstance="true">
      <param desc="logger" ref="exmLogger" />
    </emailOpenTaskProcessor>

    <emailOpenTaskPool type="Sitecore.ExM.Framework.Distributed.Tasks.TaskPools.ShortRunning.DatabaseTaskPool, Sitecore.ExM.Framework" singleInstance="true">
      <param desc="id">EmailOpenTaskPool</param>
      <param desc="dataProvider" ref="exm/web/webDatabaseTaskProvider" />
    </emailOpenTaskPool>

    <pipelines>
      <group groupName="exm.messageEvents">
        <pipelines>
          <!-- TRANSFORM QUERY STRING PIPELINE
             This pipeline is executed when a message event page is requested. It can be used to
             reformat the query string prior to the event handling. E.g. decrypting encrypted
             content, adding support for legacy formats, etc.
          -->
          <transformQueryString>
            <!-- Decrypts legacy query strings if it is encrypted. -->
            <!--<processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.TransformQueryString.DecryptLegacyQueryString, Sitecore.EmailCampaign">
              <param desc="abortIfNotEncrypted">true</param>
              <param desc="logger" ref="exmLogger" />
              <whiteListedQueryStringParameters hint="list:AddWhiteListedQueryStringParameter">
                  <queryStringParameter>ec_url</queryStringParameter>
              </whiteListedQueryStringParameters>
            </processor>-->
            <!-- Decrypts the query string if it is encrypted. -->
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.TransformQueryString.DecryptQueryString, Sitecore.EmailCampaign">
              <param desc="queryStringEncryption" ref="queryStringEncryption" />
              <param desc="abortIfNotEncrypted">true</param>
            </processor>
            <!-- Marks the query as valid. -->
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.TransformQueryString.MarkQueryValid, Sitecore.EmailCampaign" />
          </transformQueryString>

          <!-- EMAIL OPENED PIPELINE
              This pipeline is executed when Email Experience Manager processes a email opened task.
              The pipeline creates a touch point record and registers it in the interaction registry.
              The pipeline will be aborted if:
              - The message item cannot be found
              - The campaign cannot be found
          -->
          <emailOpened>
            <!-- Gets the message item -->
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.GetMessage, Sitecore.EmailCampaign">
              <param desc="logger" ref="exmLogger" />
            </processor>
            <!-- Registers the Email Opened First Time page event -->
            <processor type="Sitecore.EmailCampaign.Cd.Pipelines.EmailOpened.RegisterEmailFirstOpenedEvent, Sitecore.EmailCampaign.Cd"/>
            <!-- Registers the Email Opened page event -->
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.RegisterMessageEvent, Sitecore.EmailCampaign"/>
            <!-- Identifies the campaign associated with the message -->
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.IdentifyCampaign, Sitecore.EmailCampaign">
              <param desc="logger" ref="exmLogger" />
              <param desc="addCampaignToInteraction">false</param>
            </processor>
            <!-- Moves the contact to the opened state of the engangement plan -->
            <processor type="Sitecore.EmailCampaign.Cd.Pipelines.EmailOpened.MoveContactToMessageOpenedState, Sitecore.EmailCampaign.Cd">
              <param desc="logger" ref="exmLogger" />
            </processor>
            <!-- Sets the EXM custom values on the touch point -->
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.SetCustomValues, Sitecore.EmailCampaign">
              <param desc="logger" ref="exmLogger" />
            </processor>
            <!-- Resets the bounce contact for the preferred email address of the contact -->
            <processor type="Sitecore.EmailCampaign.Cd.Pipelines.EmailOpened.ResetContactEmailBounceCount, Sitecore.EmailCampaign.Cd">
              <param desc="contactRepository" ref="contactRepository" />
              <param desc="logger" ref="exmLogger" />
              <EmailAddressesFacetName ref="model/entities/contact/facets/facet[@name='Emails']/@name" />
            </processor>
            <!-- Gets the channel id from the campaign -->
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.SetChannelId, Sitecore.EmailCampaign">
              <param desc="logger" ref="exmLogger" />
            </processor>
            <!-- Gets the visit language and assigns it to the touch point -->
            <processor type="Sitecore.Modules.EmailCampaign.Core.Pipelines.HandleMessageEventBase.SetVisitLanguage, Sitecore.EmailCampaign">
              <param desc="logger" ref="exmLogger" />
            </processor>
            <!-- Saves the touch point record to the interaction registry -->
            <processor type="Sitecore.EmailCampaign.Cd.Pipelines.EmailOpened.SaveTouchPointRecord, Sitecore.EmailCampaign.Cd">
              <param desc="interactionRegistry" ref="interactionRegistry" />
            </processor>
          </emailOpened>

          <!-- REDIRECT URL PIPELINE
             This pipeline is executed when Email Experience Manager receives a request to redirect
             a page request from an email link to the correct destination page.
          -->
          <redirectUrl>
            <!-- Retrieves the message item associated with the redirect event. -->
            <processor type="Sitecore.EmailCampaign.Cd.Pipelines.RedirectUrl.GetMessage, Sitecore.EmailCampaign.Cd"/>
            <!-- Determines whether the link provided in the request is a reference to a page on the local web site. -->
            <processor type="Sitecore.EmailCampaign.Cd.Pipelines.RedirectUrl.CheckInternalLink, Sitecore.EmailCampaign.Cd" />
            <!-- Constructs the URL to redirect the request to. -->
            <processor type="Sitecore.EmailCampaign.Cd.Pipelines.RedirectUrl.SetRedirectToUrl, Sitecore.EmailCampaign.Cd">
              <param desc="queryStringEncryption" ref="queryStringEncryption" />
              <internalCarryoverFields hint="list:AddInternalCarryoverField">
                <carryoverField type="Sitecore.EmailCampaign.Cd.Pipelines.RedirectUrl.CarryoverField, Sitecore.EmailCampaign.Cd">
                  <param desc="fieldKey" ref="settings/setting[@name='QueryStringKey.MessageId']/@value" />
                  <param desc="urlPattern">.*Unsubscribe.aspx|UnsubscribeFromAll.aspx.*|.*sc_pd_view=1.*</param>
                </carryoverField>
                <carryoverField type="Sitecore.EmailCampaign.Cd.Pipelines.RedirectUrl.CarryoverField, Sitecore.EmailCampaign.Cd">
                  <param desc="fieldKey" ref="settings/setting[@name='QueryStringKey.AnalyticsContactId']/@value" />
                  <param desc="urlPattern">.*Unsubscribe.aspx|UnsubscribeFromAll.aspx.*|.*sc_pd_view=1.*</param>
                </carryoverField>
                <carryoverField type="Sitecore.EmailCampaign.Cd.Pipelines.RedirectUrl.CarryoverField, Sitecore.EmailCampaign.Cd">
                  <param desc="fieldKey" ref="settings/setting[@name='QueryStringKey.Campaign']/@value" />
                  <param desc="urlPattern">.*Unsubscribe.aspx|UnsubscribeFromAll.aspx.*|.*sc_pd_view=1.*</param>
                </carryoverField>
              </internalCarryoverFields>
            </processor>
            <!-- Registers the link click event in emailEventStorage and attaches the result to the pipeline argument. -->
            <processor type="Sitecore.EmailCampaign.Cd.Pipelines.RedirectUrl.RegisterMessageEvent, Sitecore.EmailCampaign.Cd">
              <param desc="eventStorage" ref="emailEventStorage" />
              <param desc="duplicateProtectionIntervalSecs" ref="settings/setting[@name='EXM.DuplicateProtectionInterval']/@value" />
              <param desc="logger" ref="exmLogger" />
            </processor>
            <!-- Registers custom page events. Internal page references matching the IgnoredUrlPattern will not add the event. -->
            <processor type="Sitecore.EmailCampaign.Cd.Pipelines.RedirectUrl.RegisterPageEvents, Sitecore.EmailCampaign.Cd">
              <EventName>Click Email Link</EventName>
              <FirstEventName>First Click Email Link</FirstEventName>
              <IgnoredUrlPattern>.*Unsubscribe.aspx|UnsubscribeFromAll.aspx.*</IgnoredUrlPattern>
            </processor>
            <!-- Triggers the campaign associated with the email message. -->
            <processor type="Sitecore.EmailCampaign.Cd.Pipelines.RedirectUrl.TriggerCampaign, Sitecore.EmailCampaign.Cd" />
            <!-- Marks the current session as an email click session. -->
            <processor type="Sitecore.EmailCampaign.Cd.Pipelines.RedirectUrl.MarkAsEmailClickSession, Sitecore.EmailCampaign.Cd" />
            <!-- Identifies the xDB contact related to the event in the xDB tracker. -->
            <processor type="Sitecore.EmailCampaign.Cd.Pipelines.RedirectUrl.IdentifyContact, Sitecore.EmailCampaign.Cd">
              <param desc="logger" ref="exmLogger" />
            </processor>
            <!-- Moves the identified contact to the Clicked state in the engagement plan of the email message. -->
            <processor type="Sitecore.EmailCampaign.Cd.Pipelines.RedirectUrl.MoveContactToEmailClickedState, Sitecore.EmailCampaign.Cd" />
            <!-- Updates the classification of the identified contact if it is currently greater than a given threshold. -->
            <processor type="Sitecore.EmailCampaign.Cd.Pipelines.RedirectUrl.UpdateContactClassification, Sitecore.EmailCampaign.Cd">
              <LowerClassificationThreshold>900</LowerClassificationThreshold>
              <NewClassification>0</NewClassification>
            </processor>
            <!-- Resets the email bounce counter of the identified contact to zero. -->
            <processor type="Sitecore.EmailCampaign.Cd.Pipelines.RedirectUrl.ResetContactEmailBounceCount, Sitecore.EmailCampaign.Cd">
              <EmailAddressesFacetName ref="model/entities/contact/facets/facet[@name='Emails']/@name" />
            </processor>
            <!-- Sets the channel id of the current visit according to the campaign activity associated with the email message. -->
            <processor type="Sitecore.EmailCampaign.Cd.Pipelines.RedirectUrl.SetVisitChannelId, Sitecore.EmailCampaign.Cd" />
            <!-- Sets the language of the current visit according to the language of the email sent to the current recipient. -->
            <processor type="Sitecore.EmailCampaign.Cd.Pipelines.RedirectUrl.SetVisitLanguage, Sitecore.EmailCampaign.Cd" />
          </redirectUrl>
        </pipelines>
      </group>

      <initializeTracker>
        <processor type ="Sitecore.Modules.EmailCampaign.Core.Analytics.DispatchRequestProcessor, Sitecore.EmailCampaign"/>
        <!-- Marks email rendering sessions as transient to prevent recorded data from being saved at the end of the session. -->
        <processor type ="Sitecore.Modules.EmailCampaign.Core.Pipelines.InitializeTracker.MarkEmailRenderSessionTransient, Sitecore.EmailCampaign"/>
      </initializeTracker>
    </pipelines>

    <settings>
      <!-- Value in seconds in which two email events (e.g. opens and clicks) related to the same message and contact are considered duplicates. 
      Within this interval only the first registration will be stored. -->
      <setting name="EXM.DuplicateProtectionInterval" value="300" />

    </settings>
  </sitecore>
</configuration>