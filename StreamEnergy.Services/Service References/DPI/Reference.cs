//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StreamEnergy.DPI {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Name="DPILink™Soap", Namespace="http://ignite.soap.dataparadigm.com/", ConfigurationName="DPI.DPILinkSoap")]
    public interface DPILinkSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/Stream_SendTelephonicEnrollmentConfirmationEm" +
            "ail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        StreamEnergy.DPI.Result Stream_SendTelephonicEnrollmentConfirmationEmail(
                    string Auth_ID, 
                    string Auth_PW, 
                    string Salutation, 
                    string RefNumber, 
                    string FullName, 
                    string HomePhone, 
                    string MobilePhone, 
                    string WorkPhone, 
                    string EmailAddress, 
                    string Last4SSN, 
                    string DLNumber, 
                    string DLState, 
                    string LanguagePreference, 
                    string ServiceAddress1, 
                    string ServiceAddress2, 
                    string ServiceCity, 
                    string ServiceState, 
                    string ServiceZip, 
                    string MailingAddress1, 
                    string MailingAddress2, 
                    string MailingCity, 
                    string MailingState, 
                    string MailingZip, 
                    string ESIID, 
                    string ServiceDate, 
                    string StandardFee, 
                    string PriorityFee, 
                    string ServicePlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/Stream_SendTelephonicEnrollmentConfirmationEm" +
            "ail", ReplyAction="*")]
        System.Threading.Tasks.Task<StreamEnergy.DPI.Result> Stream_SendTelephonicEnrollmentConfirmationEmailAsync(
                    string Auth_ID, 
                    string Auth_PW, 
                    string Salutation, 
                    string RefNumber, 
                    string FullName, 
                    string HomePhone, 
                    string MobilePhone, 
                    string WorkPhone, 
                    string EmailAddress, 
                    string Last4SSN, 
                    string DLNumber, 
                    string DLState, 
                    string LanguagePreference, 
                    string ServiceAddress1, 
                    string ServiceAddress2, 
                    string ServiceCity, 
                    string ServiceState, 
                    string ServiceZip, 
                    string MailingAddress1, 
                    string MailingAddress2, 
                    string MailingCity, 
                    string MailingState, 
                    string MailingZip, 
                    string ESIID, 
                    string ServiceDate, 
                    string StandardFee, 
                    string PriorityFee, 
                    string ServicePlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/ServerTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        StreamEnergy.DPI.Result ServerTest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/ServerTest", ReplyAction="*")]
        System.Threading.Tasks.Task<StreamEnergy.DPI.Result> ServerTestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/UpdateAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        StreamEnergy.DPI.Result UpdateAccount(
                    string Auth_ID, 
                    string Auth_PW, 
                    string Account_Number, 
                    string Status_Code, 
                    string Product_Code, 
                    string First_Name, 
                    string Last_Name, 
                    string Address_Type, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    string Zip_Plus, 
                    string Email_Address, 
                    string Phone_Number, 
                    string Actual_Service_Start_Date, 
                    string Contract_Term_Start_Date, 
                    string Contract_Term_End_Date, 
                    string Pending_Contract, 
                    string Expected_Service_End_Date, 
                    string Status_Change_Date, 
                    string Product_Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/UpdateAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<StreamEnergy.DPI.Result> UpdateAccountAsync(
                    string Auth_ID, 
                    string Auth_PW, 
                    string Account_Number, 
                    string Status_Code, 
                    string Product_Code, 
                    string First_Name, 
                    string Last_Name, 
                    string Address_Type, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    string Zip_Plus, 
                    string Email_Address, 
                    string Phone_Number, 
                    string Actual_Service_Start_Date, 
                    string Contract_Term_Start_Date, 
                    string Contract_Term_End_Date, 
                    string Pending_Contract, 
                    string Expected_Service_End_Date, 
                    string Status_Change_Date, 
                    string Product_Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/Stream_IsValidIaNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        StreamEnergy.DPI.IsValidIaNumberResult Stream_IsValidIaNumber(string Auth_ID, string Auth_PW, string IA_Number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/Stream_IsValidIaNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<StreamEnergy.DPI.IsValidIaNumberResult> Stream_IsValidIaNumberAsync(string Auth_ID, string Auth_PW, string IA_Number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/Stream_RetrieveIaContactInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        StreamEnergy.DPI.RetrieveIaContactInfoResult Stream_RetrieveIaContactInfo(string Auth_ID, string Auth_PW, string IA_Number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/Stream_RetrieveIaContactInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<StreamEnergy.DPI.RetrieveIaContactInfoResult> Stream_RetrieveIaContactInfoAsync(string Auth_ID, string Auth_PW, string IA_Number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/Stream_CreateCustomerEnrollment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        StreamEnergy.DPI.CreateCustomerEnrollmentResult Stream_CreateCustomerEnrollment(
                    string Auth_ID, 
                    string Auth_PW, 
                    string ACCT_TYPE, 
                    string CUSTOMER_TYPE, 
                    string SWITCH, 
                    string NAME_COMPANY, 
                    string NAME_FIRST, 
                    string NAME_LAST, 
                    string SSN, 
                    string PHONE_PRIMARY, 
                    string PHONE, 
                    string PHONE_MOBILE, 
                    string PHONE_WORK, 
                    string EMAIL_ADDRESS, 
                    string ADDRESS1, 
                    string ADDRESS2, 
                    string CITY, 
                    string ST, 
                    string ZIP, 
                    string SERVICE_CHOICE, 
                    string CONTRACT_LENGTH, 
                    string SPON_DCODE, 
                    string LANGUAGE, 
                    StreamEnergy.DPI.ES_Parameter[] ES_PARAMS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/Stream_CreateCustomerEnrollment", ReplyAction="*")]
        System.Threading.Tasks.Task<StreamEnergy.DPI.CreateCustomerEnrollmentResult> Stream_CreateCustomerEnrollmentAsync(
                    string Auth_ID, 
                    string Auth_PW, 
                    string ACCT_TYPE, 
                    string CUSTOMER_TYPE, 
                    string SWITCH, 
                    string NAME_COMPANY, 
                    string NAME_FIRST, 
                    string NAME_LAST, 
                    string SSN, 
                    string PHONE_PRIMARY, 
                    string PHONE, 
                    string PHONE_MOBILE, 
                    string PHONE_WORK, 
                    string EMAIL_ADDRESS, 
                    string ADDRESS1, 
                    string ADDRESS2, 
                    string CITY, 
                    string ST, 
                    string ZIP, 
                    string SERVICE_CHOICE, 
                    string CONTRACT_LENGTH, 
                    string SPON_DCODE, 
                    string LANGUAGE, 
                    StreamEnergy.DPI.ES_Parameter[] ES_PARAMS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/Stream_SendCompletedQcEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        StreamEnergy.DPI.Result Stream_SendCompletedQcEmail(string Auth_ID, string Auth_PW, StreamEnergy.DPI.Account[] Accounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/Stream_SendCompletedQcEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<StreamEnergy.DPI.Result> Stream_SendCompletedQcEmailAsync(string Auth_ID, string Auth_PW, StreamEnergy.DPI.Account[] Accounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/Stream_SendRenewalEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        StreamEnergy.DPI.Result Stream_SendRenewalEmail(
                    string Auth_ID, 
                    string Auth_PW, 
                    string RenewalRefNum, 
                    string CustomerName, 
                    string BillingAddressee, 
                    string BillingAddress1, 
                    string BillingAddress2, 
                    string BillingCity, 
                    string BillingState, 
                    string BillingZip, 
                    string EmailAddress, 
                    string SSNLastFour, 
                    string PreferredLanguage, 
                    string StreamAccountNumber, 
                    string StreamCustomerNumber, 
                    string ServiceAddressee, 
                    string ServiceAddress1, 
                    string ServiceAddress2, 
                    string ServiceCity, 
                    string ServiceState, 
                    string ServiceZip, 
                    string EsiId, 
                    string TDSP, 
                    string ProductCode, 
                    string ProductTerm, 
                    string EarlyTermFee, 
                    string EnergyCharge, 
                    string AveragePrice, 
                    string MinimumUsageFee, 
                    string EffectiveDate, 
                    string EstContractStartDate, 
                    string EstContractEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/Stream_SendRenewalEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<StreamEnergy.DPI.Result> Stream_SendRenewalEmailAsync(
                    string Auth_ID, 
                    string Auth_PW, 
                    string RenewalRefNum, 
                    string CustomerName, 
                    string BillingAddressee, 
                    string BillingAddress1, 
                    string BillingAddress2, 
                    string BillingCity, 
                    string BillingState, 
                    string BillingZip, 
                    string EmailAddress, 
                    string SSNLastFour, 
                    string PreferredLanguage, 
                    string StreamAccountNumber, 
                    string StreamCustomerNumber, 
                    string ServiceAddressee, 
                    string ServiceAddress1, 
                    string ServiceAddress2, 
                    string ServiceCity, 
                    string ServiceState, 
                    string ServiceZip, 
                    string EsiId, 
                    string TDSP, 
                    string ProductCode, 
                    string ProductTerm, 
                    string EarlyTermFee, 
                    string EnergyCharge, 
                    string AveragePrice, 
                    string MinimumUsageFee, 
                    string EffectiveDate, 
                    string EstContractStartDate, 
                    string EstContractEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/Stream_GetSponsor", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        StreamEnergy.DPI.GetSponsorResult Stream_GetSponsor(string Auth_ID, string Auth_PW, string CustomerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/Stream_GetSponsor", ReplyAction="*")]
        System.Threading.Tasks.Task<StreamEnergy.DPI.GetSponsorResult> Stream_GetSponsorAsync(string Auth_ID, string Auth_PW, string CustomerNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/UpdateUserTokenInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        StreamEnergy.DPI.Result UpdateUserTokenInfo(string Auth_ID, string Auth_PW, string Encrypted_Value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/UpdateUserTokenInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<StreamEnergy.DPI.Result> UpdateUserTokenInfoAsync(string Auth_ID, string Auth_PW, string Encrypted_Value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/UpdateUserTokenStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        StreamEnergy.DPI.Result UpdateUserTokenStatus(string Auth_ID, string Auth_PW, string Encrypted_Value, bool Is_Revoked);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/UpdateUserTokenStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<StreamEnergy.DPI.Result> UpdateUserTokenStatusAsync(string Auth_ID, string Auth_PW, string Encrypted_Value, bool Is_Revoked);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/GetCustomFilterList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        StreamEnergy.DPI.FilterResult GetCustomFilterList(string Auth_ID, string Auth_PW, string Encrypted_Value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/GetCustomFilterList", ReplyAction="*")]
        System.Threading.Tasks.Task<StreamEnergy.DPI.FilterResult> GetCustomFilterListAsync(string Auth_ID, string Auth_PW, string Encrypted_Value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/GetCustomFilterTokens", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        StreamEnergy.DPI.TokenResult GetCustomFilterTokens(string Auth_ID, string Auth_PW, string Encrypted_Value, int FilterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ignite.soap.dataparadigm.com/GetCustomFilterTokens", ReplyAction="*")]
        System.Threading.Tasks.Task<StreamEnergy.DPI.TokenResult> GetCustomFilterTokensAsync(string Auth_ID, string Auth_PW, string Encrypted_Value, int FilterID);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ignite.soap.dataparadigm.com/")]
    public partial class Result : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int resultCodeField;
        
        private string errMessageField;
        
        private string executionTimeField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ErrMessage {
            get {
                return this.errMessageField;
            }
            set {
                this.errMessageField = value;
                this.RaisePropertyChanged("ErrMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExecutionTime {
            get {
                return this.executionTimeField;
            }
            set {
                this.executionTimeField = value;
                this.RaisePropertyChanged("ExecutionTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ignite.soap.dataparadigm.com/")]
    public partial class TokenObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ignite.soap.dataparadigm.com/")]
    public partial class TokenResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TokenObject[] tokensField;
        
        private string[] textField;
        
        private int resultCodeField;
        
        private string errMessageField;
        
        private string executionTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Token")]
        public TokenObject[] Tokens {
            get {
                return this.tokensField;
            }
            set {
                this.tokensField = value;
                this.RaisePropertyChanged("Tokens");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ErrMessage {
            get {
                return this.errMessageField;
            }
            set {
                this.errMessageField = value;
                this.RaisePropertyChanged("ErrMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExecutionTime {
            get {
                return this.executionTimeField;
            }
            set {
                this.executionTimeField = value;
                this.RaisePropertyChanged("ExecutionTime");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ignite.soap.dataparadigm.com/")]
    public partial class FilterObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string filterIDField;
        
        private string filterNameField;
        
        private int countField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string FilterID {
            get {
                return this.filterIDField;
            }
            set {
                this.filterIDField = value;
                this.RaisePropertyChanged("FilterID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FilterName {
            get {
                return this.filterNameField;
            }
            set {
                this.filterNameField = value;
                this.RaisePropertyChanged("FilterName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
                this.RaisePropertyChanged("Count");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ignite.soap.dataparadigm.com/")]
    public partial class FilterResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FilterObject[] filtersField;
        
        private string[] textField;
        
        private int resultCodeField;
        
        private string errMessageField;
        
        private string executionTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Filter")]
        public FilterObject[] Filters {
            get {
                return this.filtersField;
            }
            set {
                this.filtersField = value;
                this.RaisePropertyChanged("Filters");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ErrMessage {
            get {
                return this.errMessageField;
            }
            set {
                this.errMessageField = value;
                this.RaisePropertyChanged("ErrMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExecutionTime {
            get {
                return this.executionTimeField;
            }
            set {
                this.executionTimeField = value;
                this.RaisePropertyChanged("ExecutionTime");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ignite.soap.dataparadigm.com/")]
    public partial class GetSponsorResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string sponsorNumberField;
        
        private string[] textField;
        
        private int resultCodeField;
        
        private string errMessageField;
        
        private string executionTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SponsorNumber {
            get {
                return this.sponsorNumberField;
            }
            set {
                this.sponsorNumberField = value;
                this.RaisePropertyChanged("SponsorNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ErrMessage {
            get {
                return this.errMessageField;
            }
            set {
                this.errMessageField = value;
                this.RaisePropertyChanged("ErrMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExecutionTime {
            get {
                return this.executionTimeField;
            }
            set {
                this.executionTimeField = value;
                this.RaisePropertyChanged("ExecutionTime");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ignite.soap.dataparadigm.com/")]
    public partial class Account : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string accountNumberField;
        
        private string customerNumberField;
        
        private string customerNameField;
        
        private string emailField;
        
        private string preferredLanguageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("AccountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CustomerNumber {
            get {
                return this.customerNumberField;
            }
            set {
                this.customerNumberField = value;
                this.RaisePropertyChanged("CustomerNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
                this.RaisePropertyChanged("CustomerName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string PreferredLanguage {
            get {
                return this.preferredLanguageField;
            }
            set {
                this.preferredLanguageField = value;
                this.RaisePropertyChanged("PreferredLanguage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ignite.soap.dataparadigm.com/")]
    public partial class CreateCustomerEnrollmentResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string newDCodeField;
        
        private string[] textField;
        
        private int resultCodeField;
        
        private string errMessageField;
        
        private string executionTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string NewDCode {
            get {
                return this.newDCodeField;
            }
            set {
                this.newDCodeField = value;
                this.RaisePropertyChanged("NewDCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ErrMessage {
            get {
                return this.errMessageField;
            }
            set {
                this.errMessageField = value;
                this.RaisePropertyChanged("ErrMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExecutionTime {
            get {
                return this.executionTimeField;
            }
            set {
                this.executionTimeField = value;
                this.RaisePropertyChanged("ExecutionTime");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ignite.soap.dataparadigm.com/")]
    public partial class ES_Parameter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string eSIIDField;
        
        private string eS_ADDRESS1Field;
        
        private string eS_ADDRESS2Field;
        
        private string eS_CITYField;
        
        private string eS_STField;
        
        private string eS_ZIPField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ESIID {
            get {
                return this.eSIIDField;
            }
            set {
                this.eSIIDField = value;
                this.RaisePropertyChanged("ESIID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ES_ADDRESS1 {
            get {
                return this.eS_ADDRESS1Field;
            }
            set {
                this.eS_ADDRESS1Field = value;
                this.RaisePropertyChanged("ES_ADDRESS1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ES_ADDRESS2 {
            get {
                return this.eS_ADDRESS2Field;
            }
            set {
                this.eS_ADDRESS2Field = value;
                this.RaisePropertyChanged("ES_ADDRESS2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ES_CITY {
            get {
                return this.eS_CITYField;
            }
            set {
                this.eS_CITYField = value;
                this.RaisePropertyChanged("ES_CITY");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ES_ST {
            get {
                return this.eS_STField;
            }
            set {
                this.eS_STField = value;
                this.RaisePropertyChanged("ES_ST");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ES_ZIP {
            get {
                return this.eS_ZIPField;
            }
            set {
                this.eS_ZIPField = value;
                this.RaisePropertyChanged("ES_ZIP");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ignite.soap.dataparadigm.com/")]
    public partial class ContactInfoRow : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string name_CompanyField;
        
        private string name_FirstField;
        
        private string name_LastField;
        
        private string titleField;
        
        private string streetField;
        
        private string street2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string phone_PrimaryField;
        
        private string phone_WorkField;
        
        private string phone_CellField;
        
        private string phone_FaxField;
        
        private string emailField;
        
        private string websiteField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name_Company {
            get {
                return this.name_CompanyField;
            }
            set {
                this.name_CompanyField = value;
                this.RaisePropertyChanged("Name_Company");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name_First {
            get {
                return this.name_FirstField;
            }
            set {
                this.name_FirstField = value;
                this.RaisePropertyChanged("Name_First");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Name_Last {
            get {
                return this.name_LastField;
            }
            set {
                this.name_LastField = value;
                this.RaisePropertyChanged("Name_Last");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
                this.RaisePropertyChanged("Street");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Street2 {
            get {
                return this.street2Field;
            }
            set {
                this.street2Field = value;
                this.RaisePropertyChanged("Street2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("City");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
                this.RaisePropertyChanged("Zip");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Phone_Primary {
            get {
                return this.phone_PrimaryField;
            }
            set {
                this.phone_PrimaryField = value;
                this.RaisePropertyChanged("Phone_Primary");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Phone_Work {
            get {
                return this.phone_WorkField;
            }
            set {
                this.phone_WorkField = value;
                this.RaisePropertyChanged("Phone_Work");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string Phone_Cell {
            get {
                return this.phone_CellField;
            }
            set {
                this.phone_CellField = value;
                this.RaisePropertyChanged("Phone_Cell");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Phone_Fax {
            get {
                return this.phone_FaxField;
            }
            set {
                this.phone_FaxField = value;
                this.RaisePropertyChanged("Phone_Fax");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string Website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
                this.RaisePropertyChanged("Website");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ignite.soap.dataparadigm.com/")]
    public partial class RetrieveIaContactInfoResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ContactInfoRow retrieveIaContactInfoField;
        
        private string[] textField;
        
        private int resultCodeField;
        
        private string errMessageField;
        
        private string executionTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ContactInfoRow RetrieveIaContactInfo {
            get {
                return this.retrieveIaContactInfoField;
            }
            set {
                this.retrieveIaContactInfoField = value;
                this.RaisePropertyChanged("RetrieveIaContactInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ErrMessage {
            get {
                return this.errMessageField;
            }
            set {
                this.errMessageField = value;
                this.RaisePropertyChanged("ErrMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExecutionTime {
            get {
                return this.executionTimeField;
            }
            set {
                this.executionTimeField = value;
                this.RaisePropertyChanged("ExecutionTime");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ignite.soap.dataparadigm.com/")]
    public partial class IsValidIaNumberResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool isValidIaNumberField;
        
        private string[] textField;
        
        private int resultCodeField;
        
        private string errMessageField;
        
        private string executionTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool IsValidIaNumber {
            get {
                return this.isValidIaNumberField;
            }
            set {
                this.isValidIaNumberField = value;
                this.RaisePropertyChanged("IsValidIaNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ErrMessage {
            get {
                return this.errMessageField;
            }
            set {
                this.errMessageField = value;
                this.RaisePropertyChanged("ErrMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ExecutionTime {
            get {
                return this.executionTimeField;
            }
            set {
                this.executionTimeField = value;
                this.RaisePropertyChanged("ExecutionTime");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DPILinkSoapChannel : StreamEnergy.DPI.DPILinkSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DPILinkSoapClient : System.ServiceModel.ClientBase<StreamEnergy.DPI.DPILinkSoap>, StreamEnergy.DPI.DPILinkSoap {
        
        public DPILinkSoapClient() {
        }
        
        public DPILinkSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DPILinkSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DPILinkSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DPILinkSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public StreamEnergy.DPI.Result Stream_SendTelephonicEnrollmentConfirmationEmail(
                    string Auth_ID, 
                    string Auth_PW, 
                    string Salutation, 
                    string RefNumber, 
                    string FullName, 
                    string HomePhone, 
                    string MobilePhone, 
                    string WorkPhone, 
                    string EmailAddress, 
                    string Last4SSN, 
                    string DLNumber, 
                    string DLState, 
                    string LanguagePreference, 
                    string ServiceAddress1, 
                    string ServiceAddress2, 
                    string ServiceCity, 
                    string ServiceState, 
                    string ServiceZip, 
                    string MailingAddress1, 
                    string MailingAddress2, 
                    string MailingCity, 
                    string MailingState, 
                    string MailingZip, 
                    string ESIID, 
                    string ServiceDate, 
                    string StandardFee, 
                    string PriorityFee, 
                    string ServicePlan) {
            return base.Channel.Stream_SendTelephonicEnrollmentConfirmationEmail(Auth_ID, Auth_PW, Salutation, RefNumber, FullName, HomePhone, MobilePhone, WorkPhone, EmailAddress, Last4SSN, DLNumber, DLState, LanguagePreference, ServiceAddress1, ServiceAddress2, ServiceCity, ServiceState, ServiceZip, MailingAddress1, MailingAddress2, MailingCity, MailingState, MailingZip, ESIID, ServiceDate, StandardFee, PriorityFee, ServicePlan);
        }
        
        public System.Threading.Tasks.Task<StreamEnergy.DPI.Result> Stream_SendTelephonicEnrollmentConfirmationEmailAsync(
                    string Auth_ID, 
                    string Auth_PW, 
                    string Salutation, 
                    string RefNumber, 
                    string FullName, 
                    string HomePhone, 
                    string MobilePhone, 
                    string WorkPhone, 
                    string EmailAddress, 
                    string Last4SSN, 
                    string DLNumber, 
                    string DLState, 
                    string LanguagePreference, 
                    string ServiceAddress1, 
                    string ServiceAddress2, 
                    string ServiceCity, 
                    string ServiceState, 
                    string ServiceZip, 
                    string MailingAddress1, 
                    string MailingAddress2, 
                    string MailingCity, 
                    string MailingState, 
                    string MailingZip, 
                    string ESIID, 
                    string ServiceDate, 
                    string StandardFee, 
                    string PriorityFee, 
                    string ServicePlan) {
            return base.Channel.Stream_SendTelephonicEnrollmentConfirmationEmailAsync(Auth_ID, Auth_PW, Salutation, RefNumber, FullName, HomePhone, MobilePhone, WorkPhone, EmailAddress, Last4SSN, DLNumber, DLState, LanguagePreference, ServiceAddress1, ServiceAddress2, ServiceCity, ServiceState, ServiceZip, MailingAddress1, MailingAddress2, MailingCity, MailingState, MailingZip, ESIID, ServiceDate, StandardFee, PriorityFee, ServicePlan);
        }
        
        public StreamEnergy.DPI.Result ServerTest() {
            return base.Channel.ServerTest();
        }
        
        public System.Threading.Tasks.Task<StreamEnergy.DPI.Result> ServerTestAsync() {
            return base.Channel.ServerTestAsync();
        }
        
        public StreamEnergy.DPI.Result UpdateAccount(
                    string Auth_ID, 
                    string Auth_PW, 
                    string Account_Number, 
                    string Status_Code, 
                    string Product_Code, 
                    string First_Name, 
                    string Last_Name, 
                    string Address_Type, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    string Zip_Plus, 
                    string Email_Address, 
                    string Phone_Number, 
                    string Actual_Service_Start_Date, 
                    string Contract_Term_Start_Date, 
                    string Contract_Term_End_Date, 
                    string Pending_Contract, 
                    string Expected_Service_End_Date, 
                    string Status_Change_Date, 
                    string Product_Name) {
            return base.Channel.UpdateAccount(Auth_ID, Auth_PW, Account_Number, Status_Code, Product_Code, First_Name, Last_Name, Address_Type, Address1, Address2, City, State, Zip, Zip_Plus, Email_Address, Phone_Number, Actual_Service_Start_Date, Contract_Term_Start_Date, Contract_Term_End_Date, Pending_Contract, Expected_Service_End_Date, Status_Change_Date, Product_Name);
        }
        
        public System.Threading.Tasks.Task<StreamEnergy.DPI.Result> UpdateAccountAsync(
                    string Auth_ID, 
                    string Auth_PW, 
                    string Account_Number, 
                    string Status_Code, 
                    string Product_Code, 
                    string First_Name, 
                    string Last_Name, 
                    string Address_Type, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    string Zip_Plus, 
                    string Email_Address, 
                    string Phone_Number, 
                    string Actual_Service_Start_Date, 
                    string Contract_Term_Start_Date, 
                    string Contract_Term_End_Date, 
                    string Pending_Contract, 
                    string Expected_Service_End_Date, 
                    string Status_Change_Date, 
                    string Product_Name) {
            return base.Channel.UpdateAccountAsync(Auth_ID, Auth_PW, Account_Number, Status_Code, Product_Code, First_Name, Last_Name, Address_Type, Address1, Address2, City, State, Zip, Zip_Plus, Email_Address, Phone_Number, Actual_Service_Start_Date, Contract_Term_Start_Date, Contract_Term_End_Date, Pending_Contract, Expected_Service_End_Date, Status_Change_Date, Product_Name);
        }
        
        public StreamEnergy.DPI.IsValidIaNumberResult Stream_IsValidIaNumber(string Auth_ID, string Auth_PW, string IA_Number) {
            return base.Channel.Stream_IsValidIaNumber(Auth_ID, Auth_PW, IA_Number);
        }
        
        public System.Threading.Tasks.Task<StreamEnergy.DPI.IsValidIaNumberResult> Stream_IsValidIaNumberAsync(string Auth_ID, string Auth_PW, string IA_Number) {
            return base.Channel.Stream_IsValidIaNumberAsync(Auth_ID, Auth_PW, IA_Number);
        }
        
        public StreamEnergy.DPI.RetrieveIaContactInfoResult Stream_RetrieveIaContactInfo(string Auth_ID, string Auth_PW, string IA_Number) {
            return base.Channel.Stream_RetrieveIaContactInfo(Auth_ID, Auth_PW, IA_Number);
        }
        
        public System.Threading.Tasks.Task<StreamEnergy.DPI.RetrieveIaContactInfoResult> Stream_RetrieveIaContactInfoAsync(string Auth_ID, string Auth_PW, string IA_Number) {
            return base.Channel.Stream_RetrieveIaContactInfoAsync(Auth_ID, Auth_PW, IA_Number);
        }
        
        public StreamEnergy.DPI.CreateCustomerEnrollmentResult Stream_CreateCustomerEnrollment(
                    string Auth_ID, 
                    string Auth_PW, 
                    string ACCT_TYPE, 
                    string CUSTOMER_TYPE, 
                    string SWITCH, 
                    string NAME_COMPANY, 
                    string NAME_FIRST, 
                    string NAME_LAST, 
                    string SSN, 
                    string PHONE_PRIMARY, 
                    string PHONE, 
                    string PHONE_MOBILE, 
                    string PHONE_WORK, 
                    string EMAIL_ADDRESS, 
                    string ADDRESS1, 
                    string ADDRESS2, 
                    string CITY, 
                    string ST, 
                    string ZIP, 
                    string SERVICE_CHOICE, 
                    string CONTRACT_LENGTH, 
                    string SPON_DCODE, 
                    string LANGUAGE, 
                    StreamEnergy.DPI.ES_Parameter[] ES_PARAMS) {
            return base.Channel.Stream_CreateCustomerEnrollment(Auth_ID, Auth_PW, ACCT_TYPE, CUSTOMER_TYPE, SWITCH, NAME_COMPANY, NAME_FIRST, NAME_LAST, SSN, PHONE_PRIMARY, PHONE, PHONE_MOBILE, PHONE_WORK, EMAIL_ADDRESS, ADDRESS1, ADDRESS2, CITY, ST, ZIP, SERVICE_CHOICE, CONTRACT_LENGTH, SPON_DCODE, LANGUAGE, ES_PARAMS);
        }
        
        public System.Threading.Tasks.Task<StreamEnergy.DPI.CreateCustomerEnrollmentResult> Stream_CreateCustomerEnrollmentAsync(
                    string Auth_ID, 
                    string Auth_PW, 
                    string ACCT_TYPE, 
                    string CUSTOMER_TYPE, 
                    string SWITCH, 
                    string NAME_COMPANY, 
                    string NAME_FIRST, 
                    string NAME_LAST, 
                    string SSN, 
                    string PHONE_PRIMARY, 
                    string PHONE, 
                    string PHONE_MOBILE, 
                    string PHONE_WORK, 
                    string EMAIL_ADDRESS, 
                    string ADDRESS1, 
                    string ADDRESS2, 
                    string CITY, 
                    string ST, 
                    string ZIP, 
                    string SERVICE_CHOICE, 
                    string CONTRACT_LENGTH, 
                    string SPON_DCODE, 
                    string LANGUAGE, 
                    StreamEnergy.DPI.ES_Parameter[] ES_PARAMS) {
            return base.Channel.Stream_CreateCustomerEnrollmentAsync(Auth_ID, Auth_PW, ACCT_TYPE, CUSTOMER_TYPE, SWITCH, NAME_COMPANY, NAME_FIRST, NAME_LAST, SSN, PHONE_PRIMARY, PHONE, PHONE_MOBILE, PHONE_WORK, EMAIL_ADDRESS, ADDRESS1, ADDRESS2, CITY, ST, ZIP, SERVICE_CHOICE, CONTRACT_LENGTH, SPON_DCODE, LANGUAGE, ES_PARAMS);
        }
        
        public StreamEnergy.DPI.Result Stream_SendCompletedQcEmail(string Auth_ID, string Auth_PW, StreamEnergy.DPI.Account[] Accounts) {
            return base.Channel.Stream_SendCompletedQcEmail(Auth_ID, Auth_PW, Accounts);
        }
        
        public System.Threading.Tasks.Task<StreamEnergy.DPI.Result> Stream_SendCompletedQcEmailAsync(string Auth_ID, string Auth_PW, StreamEnergy.DPI.Account[] Accounts) {
            return base.Channel.Stream_SendCompletedQcEmailAsync(Auth_ID, Auth_PW, Accounts);
        }
        
        public StreamEnergy.DPI.Result Stream_SendRenewalEmail(
                    string Auth_ID, 
                    string Auth_PW, 
                    string RenewalRefNum, 
                    string CustomerName, 
                    string BillingAddressee, 
                    string BillingAddress1, 
                    string BillingAddress2, 
                    string BillingCity, 
                    string BillingState, 
                    string BillingZip, 
                    string EmailAddress, 
                    string SSNLastFour, 
                    string PreferredLanguage, 
                    string StreamAccountNumber, 
                    string StreamCustomerNumber, 
                    string ServiceAddressee, 
                    string ServiceAddress1, 
                    string ServiceAddress2, 
                    string ServiceCity, 
                    string ServiceState, 
                    string ServiceZip, 
                    string EsiId, 
                    string TDSP, 
                    string ProductCode, 
                    string ProductTerm, 
                    string EarlyTermFee, 
                    string EnergyCharge, 
                    string AveragePrice, 
                    string MinimumUsageFee, 
                    string EffectiveDate, 
                    string EstContractStartDate, 
                    string EstContractEndDate) {
            return base.Channel.Stream_SendRenewalEmail(Auth_ID, Auth_PW, RenewalRefNum, CustomerName, BillingAddressee, BillingAddress1, BillingAddress2, BillingCity, BillingState, BillingZip, EmailAddress, SSNLastFour, PreferredLanguage, StreamAccountNumber, StreamCustomerNumber, ServiceAddressee, ServiceAddress1, ServiceAddress2, ServiceCity, ServiceState, ServiceZip, EsiId, TDSP, ProductCode, ProductTerm, EarlyTermFee, EnergyCharge, AveragePrice, MinimumUsageFee, EffectiveDate, EstContractStartDate, EstContractEndDate);
        }
        
        public System.Threading.Tasks.Task<StreamEnergy.DPI.Result> Stream_SendRenewalEmailAsync(
                    string Auth_ID, 
                    string Auth_PW, 
                    string RenewalRefNum, 
                    string CustomerName, 
                    string BillingAddressee, 
                    string BillingAddress1, 
                    string BillingAddress2, 
                    string BillingCity, 
                    string BillingState, 
                    string BillingZip, 
                    string EmailAddress, 
                    string SSNLastFour, 
                    string PreferredLanguage, 
                    string StreamAccountNumber, 
                    string StreamCustomerNumber, 
                    string ServiceAddressee, 
                    string ServiceAddress1, 
                    string ServiceAddress2, 
                    string ServiceCity, 
                    string ServiceState, 
                    string ServiceZip, 
                    string EsiId, 
                    string TDSP, 
                    string ProductCode, 
                    string ProductTerm, 
                    string EarlyTermFee, 
                    string EnergyCharge, 
                    string AveragePrice, 
                    string MinimumUsageFee, 
                    string EffectiveDate, 
                    string EstContractStartDate, 
                    string EstContractEndDate) {
            return base.Channel.Stream_SendRenewalEmailAsync(Auth_ID, Auth_PW, RenewalRefNum, CustomerName, BillingAddressee, BillingAddress1, BillingAddress2, BillingCity, BillingState, BillingZip, EmailAddress, SSNLastFour, PreferredLanguage, StreamAccountNumber, StreamCustomerNumber, ServiceAddressee, ServiceAddress1, ServiceAddress2, ServiceCity, ServiceState, ServiceZip, EsiId, TDSP, ProductCode, ProductTerm, EarlyTermFee, EnergyCharge, AveragePrice, MinimumUsageFee, EffectiveDate, EstContractStartDate, EstContractEndDate);
        }
        
        public StreamEnergy.DPI.GetSponsorResult Stream_GetSponsor(string Auth_ID, string Auth_PW, string CustomerNumber) {
            return base.Channel.Stream_GetSponsor(Auth_ID, Auth_PW, CustomerNumber);
        }
        
        public System.Threading.Tasks.Task<StreamEnergy.DPI.GetSponsorResult> Stream_GetSponsorAsync(string Auth_ID, string Auth_PW, string CustomerNumber) {
            return base.Channel.Stream_GetSponsorAsync(Auth_ID, Auth_PW, CustomerNumber);
        }
        
        public StreamEnergy.DPI.Result UpdateUserTokenInfo(string Auth_ID, string Auth_PW, string Encrypted_Value) {
            return base.Channel.UpdateUserTokenInfo(Auth_ID, Auth_PW, Encrypted_Value);
        }
        
        public System.Threading.Tasks.Task<StreamEnergy.DPI.Result> UpdateUserTokenInfoAsync(string Auth_ID, string Auth_PW, string Encrypted_Value) {
            return base.Channel.UpdateUserTokenInfoAsync(Auth_ID, Auth_PW, Encrypted_Value);
        }
        
        public StreamEnergy.DPI.Result UpdateUserTokenStatus(string Auth_ID, string Auth_PW, string Encrypted_Value, bool Is_Revoked) {
            return base.Channel.UpdateUserTokenStatus(Auth_ID, Auth_PW, Encrypted_Value, Is_Revoked);
        }
        
        public System.Threading.Tasks.Task<StreamEnergy.DPI.Result> UpdateUserTokenStatusAsync(string Auth_ID, string Auth_PW, string Encrypted_Value, bool Is_Revoked) {
            return base.Channel.UpdateUserTokenStatusAsync(Auth_ID, Auth_PW, Encrypted_Value, Is_Revoked);
        }
        
        public StreamEnergy.DPI.FilterResult GetCustomFilterList(string Auth_ID, string Auth_PW, string Encrypted_Value) {
            return base.Channel.GetCustomFilterList(Auth_ID, Auth_PW, Encrypted_Value);
        }
        
        public System.Threading.Tasks.Task<StreamEnergy.DPI.FilterResult> GetCustomFilterListAsync(string Auth_ID, string Auth_PW, string Encrypted_Value) {
            return base.Channel.GetCustomFilterListAsync(Auth_ID, Auth_PW, Encrypted_Value);
        }
        
        public StreamEnergy.DPI.TokenResult GetCustomFilterTokens(string Auth_ID, string Auth_PW, string Encrypted_Value, int FilterID) {
            return base.Channel.GetCustomFilterTokens(Auth_ID, Auth_PW, Encrypted_Value, FilterID);
        }
        
        public System.Threading.Tasks.Task<StreamEnergy.DPI.TokenResult> GetCustomFilterTokensAsync(string Auth_ID, string Auth_PW, string Encrypted_Value, int FilterID) {
            return base.Channel.GetCustomFilterTokensAsync(Auth_ID, Auth_PW, Encrypted_Value, FilterID);
        }
    }
}
